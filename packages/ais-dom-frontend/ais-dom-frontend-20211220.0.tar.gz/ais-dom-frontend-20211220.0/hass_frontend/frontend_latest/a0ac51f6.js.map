{"version":3,"file":"a0ac51f6.js","mappings":";;;;AAsFA;;;ACrDA;;;;AAMA;AAGA;AAIA;;;AAKA;AAGA;;;;;AAKA;AACA;;;;;;;;;;;AAjDA","sources":["webpack://home-assistant-frontend/./node_modules/@polymer/paper-dialog/paper-dialog.js","webpack://home-assistant-frontend/./src/panels/config/cloud/dialog-cloud-certificate/dialog-cloud-certificate.ts"],"sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-dialog-behavior/paper-dialog-shared-styles.js';\n\nimport {NeonAnimationRunnerBehavior} from '@polymer/neon-animation/neon-animation-runner-behavior.js';\nimport {PaperDialogBehavior} from '@polymer/paper-dialog-behavior/paper-dialog-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nMaterial design:\n[Dialogs](https://www.google.com/design/spec/components/dialogs.html)\n\n`<paper-dialog>` is a dialog with Material Design styling and optional\nanimations when it is opened or closed. It provides styles for a header, content\narea, and an action area for buttons. You can use the\n`<paper-dialog-scrollable>` element (in its own repository) if you need a\nscrolling content area. To autofocus a specific child element after opening the\ndialog, give it the `autofocus` attribute. See `Polymer.PaperDialogBehavior` and\n`Polymer.IronOverlayBehavior` for specifics.\n\nFor example, the following code implements a dialog with a header, scrolling\ncontent area and buttons. Focus will be given to the `dialog-confirm` button\nwhen the dialog is opened.\n\n    <paper-dialog>\n      <h2>Header</h2>\n      <paper-dialog-scrollable>\n        Lorem ipsum...\n      </paper-dialog-scrollable>\n      <div class=\"buttons\">\n        <paper-button dialog-dismiss>Cancel</paper-button>\n        <paper-button dialog-confirm autofocus>Accept</paper-button>\n      </div>\n    </paper-dialog>\n\n### Styling\n\nSee the docs for `Polymer.PaperDialogBehavior` for the custom properties\navailable for styling this element.\n\n### Animations\n\nSet the `entry-animation` and/or `exit-animation` attributes to add an animation\nwhen the dialog is opened or closed. See the documentation in\n[PolymerElements/neon-animation](https://github.com/PolymerElements/neon-animation)\nfor more info.\n\nFor example:\n\n    <script type=\"module\">\n      import '@polymer/neon-animation/animations/fade-out-animation.js';\n      import '@polymer/neon-animation/animations/scale-up-animation.js';\n    </script>\n\n    <paper-dialog entry-animation=\"scale-up-animation\"\n                  exit-animation=\"fade-out-animation\">\n      <h2>Header</h2>\n      <div>Dialog body</div>\n    </paper-dialog>\n\n### Accessibility\n\nSee the docs for `Polymer.PaperDialogBehavior` for accessibility features\nimplemented by this element.\n\n@group Paper Elements\n@element paper-dialog\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-dialog-shared-styles\"></style>\n    <slot></slot>\n`,\n\n  is: 'paper-dialog',\n  behaviors: [PaperDialogBehavior, NeonAnimationRunnerBehavior],\n  listeners: {'neon-animation-finish': '_onNeonAnimationFinish'},\n\n  _renderOpened: function() {\n    this.cancelAnimation();\n    this.playAnimation('entry');\n  },\n\n  _renderClosed: function() {\n    this.cancelAnimation();\n    this.playAnimation('exit');\n  },\n\n  _onNeonAnimationFinish: function() {\n    if (this.opened) {\n      this._finishRenderOpened();\n    } else {\n      this._finishRenderClosed();\n    }\n  }\n});\n","import \"@material/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { formatDateTime } from \"../../../../common/datetime/format_date_time\";\nimport \"../../../../components/dialog/ha-paper-dialog\";\nimport type { HaPaperDialog } from \"../../../../components/dialog/ha-paper-dialog\";\nimport { haStyle } from \"../../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport type { CloudCertificateParams as CloudCertificateDialogParams } from \"./show-dialog-cloud-certificate\";\n\n@customElement(\"dialog-cloud-certificate\")\nclass DialogCloudCertificate extends LitElement {\n  public hass!: HomeAssistant;\n\n  @property()\n  private _params?: CloudCertificateDialogParams;\n\n  public async showDialog(params: CloudCertificateDialogParams) {\n    this._params = params;\n    // Wait till dialog is rendered.\n    await this.updateComplete;\n    this._dialog.open();\n  }\n\n  protected render() {\n    if (!this._params) {\n      return html``;\n    }\n    const { certificateInfo } = this._params;\n\n    return html`\n      <ha-paper-dialog with-backdrop>\n        <h2>\n          ${this.hass!.localize(\n            \"ui.panel.config.cloud.dialog_certificate.certificate_information\"\n          )}\n        </h2>\n        <div>\n          <p>\n            ${this.hass!.localize(\n              \"ui.panel.config.cloud.dialog_certificate.certificate_expiration_date\"\n            )}\n            ${formatDateTime(\n              new Date(certificateInfo.expire_date),\n              this.hass!.locale\n            )}<br />\n            (${this.hass!.localize(\n              \"ui.panel.config.cloud.dialog_certificate.will_be_auto_renewed\"\n            )})\n          </p>\n          <p class=\"break-word\">\n            ${this.hass!.localize(\n              \"ui.panel.config.cloud.dialog_certificate.fingerprint\"\n            )}\n            ${certificateInfo.fingerprint}\n          </p>\n        </div>\n\n        <div class=\"paper-dialog-buttons\">\n          <mwc-button @click=${this._closeDialog}\n            >${this.hass!.localize(\n              \"ui.panel.config.cloud.dialog_certificate.close\"\n            )}</mwc-button\n          >\n        </div>\n      </ha-paper-dialog>\n    `;\n  }\n\n  private get _dialog(): HaPaperDialog {\n    return this.shadowRoot!.querySelector(\"ha-paper-dialog\")!;\n  }\n\n  private _closeDialog() {\n    this._dialog.close();\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        ha-paper-dialog {\n          width: 535px;\n        }\n        .break-word {\n          overflow-wrap: break-word;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-cloud-certificate\": DialogCloudCertificate;\n  }\n}\n"],"names":[],"sourceRoot":""}