{"version":3,"file":"eb60df3c.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AA+GA;AC3FA;AACA;;AAfA;;;;;;;;;;;;;;;AAAA;;AC2FA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;;;;AAIA;;;AAGA;AACA;;;AAGA;;;AAGA;AAIA;;;AAIA;;AAGA;;AAIA;;AAGA;;;;;AAOA;AACA;AACA;;AAEA;;;;;;AAMA;AAEA;;;;AAIA;AACA;;AAIA;;;AAKA;;;AAIA;;;;;AAKA;AACA;AACA;;AAEA;;;;;;AAMA;AAEA;;;AAGA;;;;AAKA;AAEA;;;;;AAvHA;;AAEA;AACA;;AA9DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA","sources":["webpack://home-assistant-frontend/./node_modules/@polymer/iron-icon/iron-icon.js","webpack://home-assistant-frontend/./src/components/ha-icon-button.ts","webpack://home-assistant-frontend/./src/panels/config/integrations/integration-panels/zha/zha-group-page.ts"],"sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {IronMeta} from '@polymer/iron-meta/iron-meta.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\nimport {Base} from '@polymer/polymer/polymer-legacy.js';\n\n/**\n\nThe `iron-icon` element displays an icon. By default an icon renders as a 24px\nsquare.\n\nExample using src:\n\n    <iron-icon src=\"star.png\"></iron-icon>\n\nExample setting size to 32px x 32px:\n\n    <iron-icon class=\"big\" src=\"big_star.png\"></iron-icon>\n\n    <style is=\"custom-style\">\n      .big {\n        --iron-icon-height: 32px;\n        --iron-icon-width: 32px;\n      }\n    </style>\n\nThe iron elements include several sets of icons. To use the default set of\nicons, import `iron-icons.js` and use the `icon` attribute to specify an icon:\n\n    <script type=\"module\">\n      import \"@polymer/iron-icons/iron-icons.js\";\n    </script>\n\n    <iron-icon icon=\"menu\"></iron-icon>\n\nTo use a different built-in set of icons, import the specific\n`iron-icons/<iconset>-icons.js`, and specify the icon as `<iconset>:<icon>`.\nFor example, to use a communication icon, you would use:\n\n    <script type=\"module\">\n      import \"@polymer/iron-icons/communication-icons.js\";\n    </script>\n\n    <iron-icon icon=\"communication:email\"></iron-icon>\n\nYou can also create custom icon sets of bitmap or SVG icons.\n\nExample of using an icon named `cherry` from a custom iconset with the ID\n`fruit`:\n\n    <iron-icon icon=\"fruit:cherry\"></iron-icon>\n\nSee `<iron-iconset>` and `<iron-iconset-svg>` for more information about how to\ncreate a custom iconset.\n\nSee the `iron-icons` demo to see the icons available in the various iconsets.\n\n### Styling\n\nThe following custom properties are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--iron-icon` | Mixin applied to the icon | {}\n`--iron-icon-width` | Width of the icon | `24px`\n`--iron-icon-height` | Height of the icon | `24px`\n`--iron-icon-fill-color` | Fill color of the svg icon | `currentcolor`\n`--iron-icon-stroke-color` | Stroke color of the svg icon | none\n\n@group Iron Elements\n@element iron-icon\n@demo demo/index.html\n@hero hero.svg\n@homepage polymer.github.io\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        @apply --layout-inline;\n        @apply --layout-center-center;\n        position: relative;\n\n        vertical-align: middle;\n\n        fill: var(--iron-icon-fill-color, currentcolor);\n        stroke: var(--iron-icon-stroke-color, none);\n\n        width: var(--iron-icon-width, 24px);\n        height: var(--iron-icon-height, 24px);\n        @apply --iron-icon;\n      }\n\n      :host([hidden]) {\n        display: none;\n      }\n    </style>\n`,\n\n  is: 'iron-icon',\n\n  properties: {\n\n    /**\n     * The name of the icon to use. The name should be of the form:\n     * `iconset_name:icon_name`.\n     */\n    icon: {type: String},\n\n    /**\n     * The name of the theme to used, if one is specified by the\n     * iconset.\n     */\n    theme: {type: String},\n\n    /**\n     * If using iron-icon without an iconset, you can set the src to be\n     * the URL of an individual icon image file. Note that this will take\n     * precedence over a given icon attribute.\n     */\n    src: {type: String},\n\n    /**\n     * @type {!IronMeta}\n     */\n    _meta: {value: Base.create('iron-meta', {type: 'iconset'})}\n\n  },\n\n  observers: [\n    '_updateIcon(_meta, isAttached)',\n    '_updateIcon(theme, isAttached)',\n    '_srcChanged(src, isAttached)',\n    '_iconChanged(icon, isAttached)'\n  ],\n\n  _DEFAULT_ICONSET: 'icons',\n\n  _iconChanged: function(icon) {\n    var parts = (icon || '').split(':');\n    this._iconName = parts.pop();\n    this._iconsetName = parts.pop() || this._DEFAULT_ICONSET;\n    this._updateIcon();\n  },\n\n  _srcChanged: function(src) {\n    this._updateIcon();\n  },\n\n  _usesIconset: function() {\n    return this.icon || !this.src;\n  },\n\n  /** @suppress {visibility} */\n  _updateIcon: function() {\n    if (this._usesIconset()) {\n      if (this._img && this._img.parentNode) {\n        dom(this.root).removeChild(this._img);\n      }\n      if (this._iconName === '') {\n        if (this._iconset) {\n          this._iconset.removeIcon(this);\n        }\n      } else if (this._iconsetName && this._meta) {\n        this._iconset = /** @type {?Polymer.Iconset} */ (\n            this._meta.byKey(this._iconsetName));\n        if (this._iconset) {\n          this._iconset.applyIcon(this, this._iconName, this.theme);\n          this.unlisten(window, 'iron-iconset-added', '_updateIcon');\n        } else {\n          this.listen(window, 'iron-iconset-added', '_updateIcon');\n        }\n      }\n    } else {\n      if (this._iconset) {\n        this._iconset.removeIcon(this);\n      }\n      if (!this._img) {\n        this._img = document.createElement('img');\n        this._img.style.width = '100%';\n        this._img.style.height = '100%';\n        this._img.draggable = false;\n      }\n      this._img.src = this.src;\n      dom(this.root).appendChild(this._img);\n    }\n  }\n});\n","import \"@material/mwc-icon-button\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"./ha-icon\";\n\n@customElement(\"ha-icon-button\")\nexport class HaIconButton extends LitElement {\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  @property({ type: String }) icon = \"\";\n\n  @property({ type: String }) label = \"\";\n\n  static shadowRootOptions: ShadowRootInit = {\n    mode: \"open\",\n    delegatesFocus: true,\n  };\n\n  protected render(): TemplateResult {\n    return html`\n      <mwc-icon-button .label=${this.label} .disabled=${this.disabled}>\n        <ha-icon .icon=${this.icon}></ha-icon>\n      </mwc-icon-button>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: inline-block;\n        outline: none;\n      }\n      :host([disabled]) {\n        pointer-events: none;\n      }\n      mwc-icon-button {\n        --mdc-theme-on-primary: currentColor;\n        --mdc-theme-text-disabled-on-light: var(--disabled-text-color);\n      }\n      ha-icon {\n        --ha-icon-display: inline;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-button\": HaIconButton;\n  }\n}\n","import \"@material/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement, PropertyValues } from \"lit\";\nimport { customElement, property, state, query } from \"lit/decorators\";\nimport { HASSDomEvent } from \"../../../../../common/dom/fire_event\";\nimport { navigate } from \"../../../../../common/navigate\";\nimport { SelectionChangedEvent } from \"../../../../../components/data-table/ha-data-table\";\nimport \"../../../../../components/ha-circular-progress\";\nimport \"../../../../../components/ha-icon-button\";\nimport {\n  addMembersToGroup,\n  fetchGroup,\n  fetchGroupableDevices,\n  removeGroups,\n  removeMembersFromGroup,\n  ZHADeviceEndpoint,\n  ZHAGroup,\n} from \"../../../../../data/zha\";\nimport \"../../../../../layouts/hass-error-screen\";\nimport \"../../../../../layouts/hass-subpage\";\nimport { HomeAssistant } from \"../../../../../types\";\nimport \"../../../ha-config-section\";\nimport { formatAsPaddedHex } from \"./functions\";\nimport \"./zha-device-endpoint-data-table\";\nimport type { ZHADeviceEndpointDataTable } from \"./zha-device-endpoint-data-table\";\n\n@customElement(\"zha-group-page\")\nexport class ZHAGroupPage extends LitElement {\n  @property({ type: Object }) public hass!: HomeAssistant;\n\n  @property({ type: Object }) public group?: ZHAGroup;\n\n  @property({ type: Number }) public groupId!: number;\n\n  @property({ type: Boolean }) public narrow!: boolean;\n\n  @property({ type: Boolean }) public isWide!: boolean;\n\n  @property({ type: Array }) public deviceEndpoints: ZHADeviceEndpoint[] = [];\n\n  @state() private _processingAdd = false;\n\n  @state() private _processingRemove = false;\n\n  @state()\n  private _filteredDeviceEndpoints: ZHADeviceEndpoint[] = [];\n\n  @state() private _selectedDevicesToAdd: string[] = [];\n\n  @state() private _selectedDevicesToRemove: string[] = [];\n\n  @query(\"#addMembers\", true)\n  private _zhaAddMembersDataTable!: ZHADeviceEndpointDataTable;\n\n  @query(\"#removeMembers\")\n  private _zhaRemoveMembersDataTable!: ZHADeviceEndpointDataTable;\n\n  private _firstUpdatedCalled = false;\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n    if (this.hass && this._firstUpdatedCalled) {\n      this._fetchData();\n    }\n  }\n\n  public disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this._processingAdd = false;\n    this._processingRemove = false;\n    this._selectedDevicesToRemove = [];\n    this._selectedDevicesToAdd = [];\n    this.deviceEndpoints = [];\n    this._filteredDeviceEndpoints = [];\n  }\n\n  protected firstUpdated(changedProperties: PropertyValues): void {\n    super.firstUpdated(changedProperties);\n    if (this.hass) {\n      this._fetchData();\n    }\n    this._firstUpdatedCalled = true;\n  }\n\n  protected render() {\n    if (!this.group) {\n      return html`\n        <hass-error-screen\n          .hass=${this.hass}\n          .error=${this.hass.localize(\n            \"ui.panel.config.zha.groups.group_not_found\"\n          )}\n        ></hass-error-screen>\n      `;\n    }\n\n    return html`\n      <hass-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .header=${this.group.name}\n      >\n        <ha-icon-button\n          slot=\"toolbar-icon\"\n          icon=\"hass:delete\"\n          @click=${this._deleteGroup}\n        ></ha-icon-button>\n        <ha-config-section .isWide=${this.isWide}>\n          <div class=\"header\">\n            ${this.hass.localize(\"ui.panel.config.zha.groups.group_info\")}\n          </div>\n\n          <p slot=\"introduction\">\n            ${this.hass.localize(\"ui.panel.config.zha.groups.group_details\")}\n          </p>\n\n          <p><b>Name:</b> ${this.group.name}</p>\n          <p><b>Group Id:</b> ${formatAsPaddedHex(this.group.group_id)}</p>\n\n          <div class=\"header\">\n            ${this.hass.localize(\"ui.panel.config.zha.groups.members\")}\n          </div>\n          <ha-card>\n            ${this.group.members.length\n              ? this.group.members.map(\n                  (member) =>\n                    html`<a\n                      href=\"/config/devices/device/${member.device\n                        .device_reg_id}\"\n                    >\n                      <paper-item\n                        >${member.device.user_given_name ||\n                        member.device.name}</paper-item\n                      >\n                    </a>`\n                )\n              : html` <paper-item> This group has no members </paper-item> `}\n          </ha-card>\n          ${this.group.members.length\n            ? html`\n                <div class=\"header\">\n                  ${this.hass.localize(\n                    \"ui.panel.config.zha.groups.remove_members\"\n                  )}\n                </div>\n\n                <zha-device-endpoint-data-table\n                  id=\"removeMembers\"\n                  .hass=${this.hass}\n                  .deviceEndpoints=${this.group.members}\n                  .narrow=${this.narrow}\n                  selectable\n                  @selection-changed=${this._handleRemoveSelectionChanged}\n                >\n                </zha-device-endpoint-data-table>\n\n                <div class=\"paper-dialog-buttons\">\n                  <mwc-button\n                    .disabled=${!this._selectedDevicesToRemove.length ||\n                    this._processingRemove}\n                    @click=${this._removeMembersFromGroup}\n                    class=\"button\"\n                  >\n                    <ha-circular-progress\n                      ?active=${this._processingRemove}\n                      alt=${this.hass.localize(\n                        \"ui.panel.config.zha.groups.removing_members\"\n                      )}\n                    ></ha-circular-progress>\n                    ${this.hass!.localize(\n                      \"ui.panel.config.zha.groups.remove_members\"\n                    )}</mwc-button\n                  >\n                </div>\n              `\n            : html``}\n\n          <div class=\"header\">\n            ${this.hass.localize(\"ui.panel.config.zha.groups.add_members\")}\n          </div>\n\n          <zha-device-endpoint-data-table\n            id=\"addMembers\"\n            .hass=${this.hass}\n            .deviceEndpoints=${this._filteredDeviceEndpoints}\n            .narrow=${this.narrow}\n            selectable\n            @selection-changed=${this._handleAddSelectionChanged}\n          >\n          </zha-device-endpoint-data-table>\n\n          <div class=\"paper-dialog-buttons\">\n            <mwc-button\n              .disabled=${!this._selectedDevicesToAdd.length ||\n              this._processingAdd}\n              @click=${this._addMembersToGroup}\n              class=\"button\"\n            >\n              ${this._processingAdd\n                ? html`<ha-circular-progress\n                    active\n                    size=\"small\"\n                    title=\"Saving\"\n                  ></ha-circular-progress>`\n                : \"\"}\n              ${this.hass!.localize(\n                \"ui.panel.config.zha.groups.add_members\"\n              )}</mwc-button\n            >\n          </div>\n        </ha-config-section>\n      </hass-subpage>\n    `;\n  }\n\n  private async _fetchData() {\n    if (this.groupId !== null && this.groupId !== undefined) {\n      this.group = await fetchGroup(this.hass!, this.groupId);\n    }\n    this.deviceEndpoints = await fetchGroupableDevices(this.hass!);\n    // filter the groupable devices so we only show devices that aren't already in the group\n    this._filterDevices();\n  }\n\n  private _filterDevices() {\n    // filter the groupable devices so we only show devices that aren't already in the group\n    this._filteredDeviceEndpoints = this.deviceEndpoints.filter(\n      (deviceEndpoint) =>\n        !this.group!.members.some(\n          (member) =>\n            member.device.ieee === deviceEndpoint.device.ieee &&\n            member.endpoint_id === deviceEndpoint.endpoint_id\n        )\n    );\n  }\n\n  private _handleAddSelectionChanged(\n    ev: HASSDomEvent<SelectionChangedEvent>\n  ): void {\n    this._selectedDevicesToAdd = ev.detail.value;\n  }\n\n  private _handleRemoveSelectionChanged(\n    ev: HASSDomEvent<SelectionChangedEvent>\n  ): void {\n    this._selectedDevicesToRemove = ev.detail.value;\n  }\n\n  private async _addMembersToGroup(): Promise<void> {\n    this._processingAdd = true;\n    const members = this._selectedDevicesToAdd.map((member) => {\n      const memberParts = member.split(\"_\");\n      return { ieee: memberParts[0], endpoint_id: memberParts[1] };\n    });\n    this.group = await addMembersToGroup(this.hass, this.groupId, members);\n    this._filterDevices();\n    this._selectedDevicesToAdd = [];\n    this._zhaAddMembersDataTable.clearSelection();\n    this._processingAdd = false;\n  }\n\n  private async _removeMembersFromGroup(): Promise<void> {\n    this._processingRemove = true;\n    const members = this._selectedDevicesToRemove.map((member) => {\n      const memberParts = member.split(\"_\");\n      return { ieee: memberParts[0], endpoint_id: memberParts[1] };\n    });\n    this.group = await removeMembersFromGroup(this.hass, this.groupId, members);\n    this._filterDevices();\n    this._selectedDevicesToRemove = [];\n    this._zhaRemoveMembersDataTable.clearSelection();\n    this._processingRemove = false;\n  }\n\n  private async _deleteGroup(): Promise<void> {\n    await removeGroups(this.hass, [this.groupId]);\n    navigate(`/config/zha/groups`, { replace: true });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      css`\n        hass-subpage {\n          --app-header-text-color: var(--sidebar-icon-color);\n        }\n        .header {\n          font-family: var(--paper-font-display1_-_font-family);\n          -webkit-font-smoothing: var(\n            --paper-font-display1_-_-webkit-font-smoothing\n          );\n          font-size: var(--paper-font-display1_-_font-size);\n          font-weight: var(--paper-font-display1_-_font-weight);\n          letter-spacing: var(--paper-font-display1_-_letter-spacing);\n          line-height: var(--paper-font-display1_-_line-height);\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .button {\n          float: right;\n        }\n\n        a {\n          color: var(--primary-color);\n          text-decoration: none;\n        }\n        .paper-dialog-buttons {\n          align-items: flex-end;\n          padding: 8px;\n        }\n        .paper-dialog-buttons .warning {\n          --mdc-theme-primary: var(--error-color);\n        }\n      `,\n    ];\n  }\n}\n"],"names":[],"sourceRoot":""}