{"version":3,"file":"a95d0a1a.js","mappings":";;;;AAsFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA","sources":["webpack://home-assistant-frontend/./node_modules/@polymer/paper-dialog/paper-dialog.js","webpack://home-assistant-frontend/./src/panels/mailbox/ha-dialog-show-audio-message.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-dialog-behavior/paper-dialog-shared-styles.js';\n\nimport {NeonAnimationRunnerBehavior} from '@polymer/neon-animation/neon-animation-runner-behavior.js';\nimport {PaperDialogBehavior} from '@polymer/paper-dialog-behavior/paper-dialog-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nMaterial design:\n[Dialogs](https://www.google.com/design/spec/components/dialogs.html)\n\n`<paper-dialog>` is a dialog with Material Design styling and optional\nanimations when it is opened or closed. It provides styles for a header, content\narea, and an action area for buttons. You can use the\n`<paper-dialog-scrollable>` element (in its own repository) if you need a\nscrolling content area. To autofocus a specific child element after opening the\ndialog, give it the `autofocus` attribute. See `Polymer.PaperDialogBehavior` and\n`Polymer.IronOverlayBehavior` for specifics.\n\nFor example, the following code implements a dialog with a header, scrolling\ncontent area and buttons. Focus will be given to the `dialog-confirm` button\nwhen the dialog is opened.\n\n    <paper-dialog>\n      <h2>Header</h2>\n      <paper-dialog-scrollable>\n        Lorem ipsum...\n      </paper-dialog-scrollable>\n      <div class=\"buttons\">\n        <paper-button dialog-dismiss>Cancel</paper-button>\n        <paper-button dialog-confirm autofocus>Accept</paper-button>\n      </div>\n    </paper-dialog>\n\n### Styling\n\nSee the docs for `Polymer.PaperDialogBehavior` for the custom properties\navailable for styling this element.\n\n### Animations\n\nSet the `entry-animation` and/or `exit-animation` attributes to add an animation\nwhen the dialog is opened or closed. See the documentation in\n[PolymerElements/neon-animation](https://github.com/PolymerElements/neon-animation)\nfor more info.\n\nFor example:\n\n    <script type=\"module\">\n      import '@polymer/neon-animation/animations/fade-out-animation.js';\n      import '@polymer/neon-animation/animations/scale-up-animation.js';\n    </script>\n\n    <paper-dialog entry-animation=\"scale-up-animation\"\n                  exit-animation=\"fade-out-animation\">\n      <h2>Header</h2>\n      <div>Dialog body</div>\n    </paper-dialog>\n\n### Accessibility\n\nSee the docs for `Polymer.PaperDialogBehavior` for accessibility features\nimplemented by this element.\n\n@group Paper Elements\n@element paper-dialog\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-dialog-shared-styles\"></style>\n    <slot></slot>\n`,\n\n  is: 'paper-dialog',\n  behaviors: [PaperDialogBehavior, NeonAnimationRunnerBehavior],\n  listeners: {'neon-animation-finish': '_onNeonAnimationFinish'},\n\n  _renderOpened: function() {\n    this.cancelAnimation();\n    this.playAnimation('entry');\n  },\n\n  _renderClosed: function() {\n    this.cancelAnimation();\n    this.playAnimation('exit');\n  },\n\n  _onNeonAnimationFinish: function() {\n    if (this.opened) {\n      this._finishRenderOpened();\n    } else {\n      this._finishRenderClosed();\n    }\n  }\n});\n","import \"@material/mwc-button\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\n/* eslint-plugin-disable lit */\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport \"../../components/dialog/ha-paper-dialog\";\nimport \"../../components/ha-circular-progress\";\nimport LocalizeMixin from \"../../mixins/localize-mixin\";\nimport \"../../styles/polymer-ha-style-dialog\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaDialogShowAudioMessage extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"ha-style-dialog\">\n        .error {\n          color: red;\n        }\n        @media all and (max-width: 500px) {\n          ha-paper-dialog {\n            margin: 0;\n            width: 100%;\n            max-height: calc(100% - var(--header-height));\n\n            position: fixed !important;\n            bottom: 0px;\n            left: 0px;\n            right: 0px;\n            overflow: scroll;\n            border-bottom-left-radius: 0px;\n            border-bottom-right-radius: 0px;\n          }\n        }\n\n        ha-paper-dialog {\n          border-radius: 2px;\n        }\n        ha-paper-dialog p {\n          color: var(--secondary-text-color);\n        }\n\n        .icon {\n          float: right;\n        }\n      </style>\n      <ha-paper-dialog\n        id=\"mp3dialog\"\n        with-backdrop\n        opened=\"{{_opened}}\"\n        on-opened-changed=\"_openedChanged\"\n      >\n        <h2>\n          [[localize('ui.panel.mailbox.playback_title')]]\n          <div class=\"icon\">\n            <template is=\"dom-if\" if=\"[[_loading]]\">\n              <ha-circular-progress active></ha-circular-progress>\n            </template>\n            <ha-icon-button\n              id=\"delicon\"\n              on-click=\"openDeleteDialog\"\n              icon=\"hass:delete\"\n            ></ha-icon-button>\n          </div>\n        </h2>\n        <div id=\"transcribe\"></div>\n        <div>\n          <template is=\"dom-if\" if=\"[[_errorMsg]]\">\n            <div class=\"error\">[[_errorMsg]]</div>\n          </template>\n          <audio id=\"mp3\" preload=\"none\" controls>\n            <source id=\"mp3src\" src=\"\" type=\"audio/mpeg\" />\n          </audio>\n        </div>\n      </ha-paper-dialog>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n\n      _currentMessage: Object,\n\n      // Error message when can't talk to server etc\n      _errorMsg: String,\n\n      _loading: {\n        type: Boolean,\n        value: false,\n      },\n\n      _opened: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  showDialog({ hass, message }) {\n    this.hass = hass;\n    this._errorMsg = null;\n    this._currentMessage = message;\n    this._opened = true;\n    this.$.transcribe.innerText = message.message;\n    const platform = message.platform;\n    const mp3 = this.$.mp3;\n    if (platform.has_media) {\n      mp3.style.display = \"\";\n      this._showLoading(true);\n      mp3.src = null;\n      const url = `/api/mailbox/media/${platform.name}/${message.sha}`;\n      this.hass\n        .fetchWithAuth(url)\n        .then((response) => {\n          if (response.ok) {\n            return response.blob();\n          }\n          return Promise.reject({\n            status: response.status,\n            statusText: response.statusText,\n          });\n        })\n        .then((blob) => {\n          this._showLoading(false);\n          mp3.src = window.URL.createObjectURL(blob);\n          mp3.play();\n        })\n        .catch((err) => {\n          this._showLoading(false);\n          this._errorMsg = `Error loading audio: ${err.statusText}`;\n        });\n    } else {\n      mp3.style.display = \"none\";\n      this._showLoading(false);\n    }\n  }\n\n  openDeleteDialog() {\n    if (confirm(this.localize(\"ui.panel.mailbox.delete_prompt\"))) {\n      this.deleteSelected();\n    }\n  }\n\n  deleteSelected() {\n    const msg = this._currentMessage;\n    this.hass.callApi(\n      \"DELETE\",\n      `mailbox/delete/${msg.platform.name}/${msg.sha}`\n    );\n    this._dialogDone();\n  }\n\n  _dialogDone() {\n    this.$.mp3.pause();\n    this.setProperties({\n      _currentMessage: null,\n      _errorMsg: null,\n      _loading: false,\n      _opened: false,\n    });\n  }\n\n  _openedChanged(ev) {\n    // Closed dialog by clicking on the overlay\n    // Check against dialogClosedCallback to make sure we didn't change\n    // programmatically\n    if (!ev.detail.value) {\n      this._dialogDone();\n    }\n  }\n\n  _showLoading(displayed) {\n    const delicon = this.$.delicon;\n    if (displayed) {\n      this._loading = true;\n      delicon.style.display = \"none\";\n    } else {\n      const platform = this._currentMessage.platform;\n      this._loading = false;\n      delicon.style.display = platform.can_delete ? \"\" : \"none\";\n    }\n  }\n}\ncustomElements.define(\"ha-dialog-show-audio-message\", HaDialogShowAudioMessage);\n"],"names":[],"sourceRoot":""}