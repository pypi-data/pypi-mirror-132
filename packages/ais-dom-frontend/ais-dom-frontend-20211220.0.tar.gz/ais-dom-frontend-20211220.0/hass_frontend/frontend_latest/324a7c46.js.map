{"version":3,"file":"324a7c46.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AA+GA;AClFA;;;;AAIA;AACA;AACA;AACA;;;;AA9BA;;;;;;;;AAAA;ACcA;AACA;;AAfA;;;;;;;;;;;;;;;AAAA;;ACmBA;;AAGA;AACA;AACA;;AAEA;;AAGA;AACA;;;;AAIA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAnCA;AC2BA;AAEA;;;AAGA;;AAEA;;;AAGA;;;;AAIA;AAIA;;;AAGA;;AAEA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA/EA","sources":["webpack://home-assistant-frontend/./node_modules/@polymer/iron-icon/iron-icon.js","webpack://home-assistant-frontend/./src/components/ha-button-menu.ts","webpack://home-assistant-frontend/./src/components/ha-icon-button.ts","webpack://home-assistant-frontend/./src/layouts/hass-subpage.ts","webpack://home-assistant-frontend/./src/panels/config/ha-config-aiszigbee.ts"],"sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {IronMeta} from '@polymer/iron-meta/iron-meta.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\nimport {Base} from '@polymer/polymer/polymer-legacy.js';\n\n/**\n\nThe `iron-icon` element displays an icon. By default an icon renders as a 24px\nsquare.\n\nExample using src:\n\n    <iron-icon src=\"star.png\"></iron-icon>\n\nExample setting size to 32px x 32px:\n\n    <iron-icon class=\"big\" src=\"big_star.png\"></iron-icon>\n\n    <style is=\"custom-style\">\n      .big {\n        --iron-icon-height: 32px;\n        --iron-icon-width: 32px;\n      }\n    </style>\n\nThe iron elements include several sets of icons. To use the default set of\nicons, import `iron-icons.js` and use the `icon` attribute to specify an icon:\n\n    <script type=\"module\">\n      import \"@polymer/iron-icons/iron-icons.js\";\n    </script>\n\n    <iron-icon icon=\"menu\"></iron-icon>\n\nTo use a different built-in set of icons, import the specific\n`iron-icons/<iconset>-icons.js`, and specify the icon as `<iconset>:<icon>`.\nFor example, to use a communication icon, you would use:\n\n    <script type=\"module\">\n      import \"@polymer/iron-icons/communication-icons.js\";\n    </script>\n\n    <iron-icon icon=\"communication:email\"></iron-icon>\n\nYou can also create custom icon sets of bitmap or SVG icons.\n\nExample of using an icon named `cherry` from a custom iconset with the ID\n`fruit`:\n\n    <iron-icon icon=\"fruit:cherry\"></iron-icon>\n\nSee `<iron-iconset>` and `<iron-iconset-svg>` for more information about how to\ncreate a custom iconset.\n\nSee the `iron-icons` demo to see the icons available in the various iconsets.\n\n### Styling\n\nThe following custom properties are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--iron-icon` | Mixin applied to the icon | {}\n`--iron-icon-width` | Width of the icon | `24px`\n`--iron-icon-height` | Height of the icon | `24px`\n`--iron-icon-fill-color` | Fill color of the svg icon | `currentcolor`\n`--iron-icon-stroke-color` | Stroke color of the svg icon | none\n\n@group Iron Elements\n@element iron-icon\n@demo demo/index.html\n@hero hero.svg\n@homepage polymer.github.io\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        @apply --layout-inline;\n        @apply --layout-center-center;\n        position: relative;\n\n        vertical-align: middle;\n\n        fill: var(--iron-icon-fill-color, currentcolor);\n        stroke: var(--iron-icon-stroke-color, none);\n\n        width: var(--iron-icon-width, 24px);\n        height: var(--iron-icon-height, 24px);\n        @apply --iron-icon;\n      }\n\n      :host([hidden]) {\n        display: none;\n      }\n    </style>\n`,\n\n  is: 'iron-icon',\n\n  properties: {\n\n    /**\n     * The name of the icon to use. The name should be of the form:\n     * `iconset_name:icon_name`.\n     */\n    icon: {type: String},\n\n    /**\n     * The name of the theme to used, if one is specified by the\n     * iconset.\n     */\n    theme: {type: String},\n\n    /**\n     * If using iron-icon without an iconset, you can set the src to be\n     * the URL of an individual icon image file. Note that this will take\n     * precedence over a given icon attribute.\n     */\n    src: {type: String},\n\n    /**\n     * @type {!IronMeta}\n     */\n    _meta: {value: Base.create('iron-meta', {type: 'iconset'})}\n\n  },\n\n  observers: [\n    '_updateIcon(_meta, isAttached)',\n    '_updateIcon(theme, isAttached)',\n    '_srcChanged(src, isAttached)',\n    '_iconChanged(icon, isAttached)'\n  ],\n\n  _DEFAULT_ICONSET: 'icons',\n\n  _iconChanged: function(icon) {\n    var parts = (icon || '').split(':');\n    this._iconName = parts.pop();\n    this._iconsetName = parts.pop() || this._DEFAULT_ICONSET;\n    this._updateIcon();\n  },\n\n  _srcChanged: function(src) {\n    this._updateIcon();\n  },\n\n  _usesIconset: function() {\n    return this.icon || !this.src;\n  },\n\n  /** @suppress {visibility} */\n  _updateIcon: function() {\n    if (this._usesIconset()) {\n      if (this._img && this._img.parentNode) {\n        dom(this.root).removeChild(this._img);\n      }\n      if (this._iconName === '') {\n        if (this._iconset) {\n          this._iconset.removeIcon(this);\n        }\n      } else if (this._iconsetName && this._meta) {\n        this._iconset = /** @type {?Polymer.Iconset} */ (\n            this._meta.byKey(this._iconsetName));\n        if (this._iconset) {\n          this._iconset.applyIcon(this, this._iconName, this.theme);\n          this.unlisten(window, 'iron-iconset-added', '_updateIcon');\n        } else {\n          this.listen(window, 'iron-iconset-added', '_updateIcon');\n        }\n      }\n    } else {\n      if (this._iconset) {\n        this._iconset.removeIcon(this);\n      }\n      if (!this._img) {\n        this._img = document.createElement('img');\n        this._img.style.width = '100%';\n        this._img.style.height = '100%';\n        this._img.draggable = false;\n      }\n      this._img.src = this.src;\n      dom(this.root).appendChild(this._img);\n    }\n  }\n});\n","import \"@material/mwc-menu\";\nimport type { Corner, Menu } from \"@material/mwc-menu\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\n\n@customElement(\"ha-button-menu\")\nexport class HaButtonMenu extends LitElement {\n  @property() public corner: Corner = \"TOP_START\";\n\n  @property({ type: Boolean }) public multi = false;\n\n  @property({ type: Boolean }) public activatable = false;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public fixed = false;\n\n  @query(\"mwc-menu\", true) private _menu?: Menu;\n\n  public get items() {\n    return this._menu?.items;\n  }\n\n  public get selected() {\n    return this._menu?.selected;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div @click=${this._handleClick}>\n        <slot name=\"trigger\"></slot>\n      </div>\n      <mwc-menu\n        .corner=${this.corner}\n        .fixed=${this.fixed}\n        .multi=${this.multi}\n        .activatable=${this.activatable}\n      >\n        <slot></slot>\n      </mwc-menu>\n    `;\n  }\n\n  private _handleClick(): void {\n    if (this.disabled) {\n      return;\n    }\n    this._menu!.anchor = this;\n    this._menu!.show();\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: inline-block;\n        position: relative;\n      }\n      ::slotted([disabled]) {\n        color: var(--disabled-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-button-menu\": HaButtonMenu;\n  }\n}\n","import \"@material/mwc-icon-button\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"./ha-icon\";\n\n@customElement(\"ha-icon-button\")\nexport class HaIconButton extends LitElement {\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  @property({ type: String }) icon = \"\";\n\n  @property({ type: String }) label = \"\";\n\n  static shadowRootOptions: ShadowRootInit = {\n    mode: \"open\",\n    delegatesFocus: true,\n  };\n\n  protected render(): TemplateResult {\n    return html`\n      <mwc-icon-button .label=${this.label} .disabled=${this.disabled}>\n        <ha-icon .icon=${this.icon}></ha-icon>\n      </mwc-icon-button>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: inline-block;\n        outline: none;\n      }\n      :host([disabled]) {\n        pointer-events: none;\n      }\n      mwc-icon-button {\n        --mdc-theme-on-primary: currentColor;\n        --mdc-theme-text-disabled-on-light: var(--disabled-text-color);\n      }\n      ha-icon {\n        --ha-icon-display: inline;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-button\": HaIconButton;\n  }\n}\n","import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, eventOptions, property } from \"lit/decorators\";\nimport { restoreScroll } from \"../common/decorators/restore-scroll\";\nimport \"../components/ha-icon-button-arrow-prev\";\nimport \"../components/ha-menu-button\";\nimport { HomeAssistant } from \"../types\";\n\n@customElement(\"hass-subpage\")\nclass HassSubpage extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public header?: string;\n\n  @property({ type: Boolean, attribute: \"main-page\" }) public mainPage = false;\n\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n\n  @property({ type: Boolean }) public supervisor = false;\n\n  // @ts-ignore\n  @restoreScroll(\".content\") private _savedScrollPos?: number;\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"toolbar\">\n        ${this.mainPage || history.state?.root\n          ? html`\n              <ha-menu-button\n                .hassio=${this.supervisor}\n                .hass=${this.hass}\n                .narrow=${this.narrow}\n              ></ha-menu-button>\n            `\n          : html`\n              <ha-icon-button-arrow-prev\n                .hass=${this.hass}\n                @click=${this._backTapped}\n              ></ha-icon-button-arrow-prev>\n            `}\n\n        <div class=\"main-title\">${this.header}</div>\n        <slot name=\"toolbar-icon\"></slot>\n      </div>\n      <div class=\"content\" @scroll=${this._saveScrollPos}><slot></slot></div>\n    `;\n  }\n\n  @eventOptions({ passive: true })\n  private _saveScrollPos(e: Event) {\n    this._savedScrollPos = (e.target as HTMLDivElement).scrollTop;\n  }\n\n  private _backTapped(): void {\n    history.back();\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: block;\n        height: 100%;\n        background-color: var(--primary-background-color);\n      }\n\n      :host([narrow]) {\n        width: 100%;\n        position: fixed;\n      }\n\n      .toolbar {\n        display: flex;\n        align-items: center;\n        font-size: 20px;\n        height: var(--header-height);\n        padding: 0 16px;\n        pointer-events: none;\n        background-color: var(--app-header-background-color);\n        font-weight: 400;\n        color: var(--app-header-text-color, white);\n        border-bottom: var(--app-header-border-bottom, none);\n        box-sizing: border-box;\n      }\n\n      ha-menu-button,\n      ha-icon-button-arrow-prev,\n      ::slotted([slot=\"toolbar-icon\"]) {\n        pointer-events: auto;\n      }\n\n      .main-title {\n        margin: 0 0 0 24px;\n        line-height: 20px;\n        flex-grow: 1;\n      }\n\n      .content {\n        position: relative;\n        width: 100%;\n        height: calc(100% - 1px - var(--header-height));\n        overflow-y: auto;\n        overflow: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hass-subpage\": HassSubpage;\n  }\n}\n","import \"@material/mwc-list/mwc-list-item\";\nimport \"../../components/ha-button-menu\";\nimport {css, CSSResultArray, html, LitElement, PropertyValues, TemplateResult} from \"lit\";\nimport {customElement, property} from 'lit/decorators';\nimport { loadTokens } from \"../../common/auth/token_storage\";\nimport \"../../layouts/hass-loading-screen\";\nimport \"../../layouts/hass-subpage\";\nimport \"../../components/ha-circular-progress\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { haStyle } from \"../../resources/styles\";\nimport { HomeAssistant, Route } from \"../../types\";\nimport \"../../components/ha-icon-button\";\nimport {\n  showAisFileDialog,\n  HaAisFileDialogParams,\n} from \"../../dialogs/ais-files/show-dialog-ais-file\";\nimport { mdiDotsVertical } from \"@mdi/js\";\n\n@customElement(\"ha-config-aiszigbee\")\nclass ConfigAisZigbee extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public route!: Route;\n\n  @property({ type: Boolean })\n  public narrow = false;\n\n  @property() private _access_token = \"\";\n\n  protected render(): TemplateResult {\n    const tokens = loadTokens();\n    this._access_token = tokens?.access_token || \"\";\n    const zigbee2mqtt = this.hass.states[\"sensor.status_serwisu_zigbee2mqtt\"];\n    if (zigbee2mqtt.state === \"online\") {\n      const iframe = html` <iframe\n        src=\"/api/zigbee2mqtt/${this._access_token}/\"\n      ></iframe>`;\n      return html`<hass-subpage header=\"Zigbee2Mqtt\" .narrow=${this.narrow}>\n        <ha-button-menu corner=\"BOTTOM_START\" slot=\"toolbar-icon\">\n          <mwc-icon-button slot=\"trigger\" alt=\"menu\">\n            <ha-svg-icon .path=${mdiDotsVertical}></ha-svg-icon>\n          </mwc-icon-button>\n          <mwc-list-item @click=${this._openZigbee2MqttFileConfig}>\n            Edit Zigbee2Mqtt configuration.yaml\n          </mwc-list-item>\n          <mwc-list-item @click=${this._restartZigbeeService}>\n            Restart zigbee sevice\n          </mwc-list-item>\n        </ha-button-menu>\n        ${iframe}\n      </hass-subpage>`;\n    }\n\n    return html`<hass-subpage header=\"Zigbee2Mqtt\" .narrow=${this.narrow}>\n      <ha-button-menu corner=\"BOTTOM_START\" slot=\"toolbar-icon\">\n        <mwc-icon-button slot=\"trigger\" alt=\"menu\">\n          <ha-svg-icon .path=${mdiDotsVertical}></ha-svg-icon>\n        </mwc-icon-button>\n        <mwc-list-item @click=${this._openZigbee2MqttFileConfig}>\n          Edit Zigbee2Mqtt configuration.yaml\n        </mwc-list-item>\n        <mwc-list-item @click=${this._restartZigbeeService}>\n          Restart Zigbee2Mqtt sevice\n        </mwc-list-item>\n      </ha-button-menu>\n      <div\n        style=\"width: 100%; height: 100%; display: flex; align-items: center;\"\n      >\n        <div style=\"width: 100%;\">\n          <p style=\"text-align: center;\">\n            <span class=\"text\"><b>BRAK POŁĄCZENIA Z ZIGBEE2MQTT</b></span>\n            <span class=\"icon\">\n              <svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n                <path\n                  fill=\"currentColor\"\n                  d=\"M8 2C6.9 2 6 2.9 6 4V12H5V16L9 20V22H15V20L19 16V12H18V4C18 2.9 17.11 2 16 2M8 4H16V12H8M9 7V9H11V7M13 7V9H15V7Z\"\n                />\n              </svg>\n            </span>\n            <br />\n          </p>\n          <svg\n            style=\"width:84px;height:84px;display:block;margin:auto;\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              fill=\"currentColor\"\n              d=\"M11.6 13V12.9L11.3 12.6H11.2L9.6 12C10 11.7 10.4 11.5 10.9 11.5C11.4 11.5 11.9 11.7 12.3 12.1C12.7 12.5 12.9 12.9 12.9 13.4C12.9 13.9 12.8 14.3 12.4 14.7L11.6 13M9.7 19.3C9.4 18.3 9.6 17.1 10.4 15.5L11.6 18.6C11.8 19.2 11.6 19.6 11 19.9C10.4 20.2 10 20 9.7 19.3M4.1 13.1C4.3 12.5 4.7 12.3 5.3 12.5L8.5 13.7C6.9 14.5 5.7 14.7 4.7 14.4C4.1 14.1 3.9 13.7 4.1 13.1M12 8.1H11V9.5H10.6C9.5 9.5 8.6 9.9 7.8 10.7L7.4 11.3L6 10.5C5.7 10.4 5.4 10.4 5 10.4C4.4 10.4 3.8 10.6 3.3 11S2.4 11.8 2.2 12.4C2 13.1 2 13.7 2.2 14.4C2.5 15.1 2.8 15.6 3.3 15.9C2.9 17.4 3.2 18.7 4.3 19.8C5.1 20.6 6 21 7.1 21C7.6 21 7.9 21 8.2 20.9C8.8 21.7 9.6 22.2 10.6 22.2C10.9 22.2 11.3 22.2 11.6 22.1C12.2 21.9 12.6 21.5 13 21C13.4 20.4 13.6 19.9 13.6 19.3C13.6 18.9 13.6 18.6 13.5 18.3L12.9 16.9L13.5 16.5C14.3 15.7 14.7 14.6 14.6 13.4H16V12.4H14.4C14 11.2 13.2 10.4 12 10V8.1M17.3 6.8C17.1 6.6 17 6.3 17 6.1C17 5.8 17.1 5.6 17.3 5.4C17.5 5.2 17.7 5.1 18 5.1S18.5 5.2 18.7 5.4C18.9 5.5 19 5.8 19 6.1C19 6.4 18.9 6.6 18.7 6.8C18.5 7 18.3 7 18 7S17.5 7 17.3 6.8M20.7 4.1H19.6L19.3 3.2C19.1 2.5 18.7 2.2 18 2.2C17.3 2.2 16.8 2.5 16.7 3.2L16.4 4.1H15.3C14.7 4.1 14.3 4.4 14 5C13.8 5.6 14 6.1 14.6 6.5L15.5 7L15.1 8.2C14.9 8.6 15 9 15.2 9.4C15.5 9.8 15.8 10 16.3 10C16.7 10 17 9.9 17.2 9.7L18 9.1L18.8 9.8C19 9.9 19.3 10 19.7 10C20.2 10 20.5 9.8 20.8 9.4C21 9 21.1 8.6 20.9 8.2L20.5 7L21.3 6.5C21.9 6.1 22.1 5.6 21.9 5C21.7 4.3 21.3 4.1 20.7 4.1Z\"\n            />\n          </svg>\n          <p style=\"text-align: center;\">\n            <span class=\"text\"\n              ><b\n                >usługa zigbee2mqtt jest\n                <span\n                  .onclick=\"${this.showZigbeeStatus}\"\n                  style=\"text-decoration: underline; cursor: pointer;\"\n                >\n                  <a> ${zigbee2mqtt.state} </a> </span\n                >, czekam na połączenie, to może potrwać kilka minut...</b\n              ></span\n            >\n            <br /><br />\n            <ha-circular-progress active></ha-circular-progress>\n            <br />\n            <br />\n            W razie problemów sprawdz logi, wpisując w\n            <a href=\"/developer-tools/console\">konsoli</a> komendę:\n            <b>pm2 logs</b><br />\n            Szczegóły w dokumentacji:\n            <a href=\"https://www.ai-speaker.com/docs/ais_app_integration_zigbee\"\n              >Integracja Zigbee2MQTT</a\n            >\n          </p>\n        </div>\n      </div>\n    </hass-subpage>`;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n  }\n\n  private showZigbeeStatus() {\n    fireEvent(this, \"hass-more-info\", {\n      entityId: \"sensor.status_serwisu_zigbee2mqtt\",\n    });\n  }\n\n  private async _openZigbee2MqttFileConfig() {\n    const filePath =\n      \"/data/data/pl.sviete.dom/files/home/zigbee2mqtt/data/configuration.yaml\";\n    const file = await this.hass.callApi<string>(\"POST\", \"ais_file/read\", {\n      filePath: filePath,\n    });\n    const fileParams: HaAisFileDialogParams = {\n      dialogTitle: \"Zigbee2Mqtt configuration.yaml\",\n      filePath: filePath,\n      fileBody: file,\n      readonly: false,\n    };\n    showAisFileDialog(this, fileParams);\n  }\n\n  private async _restartZigbeeService() {\n    this.hass.callService(\"ais_shell_command\", \"restart_pm2_service\", {\n      service: \"zigbee\",\n    });\n  }\n\n  static get styles(): CSSResultArray {\n    return [\n      haStyle,\n      css`\n        iframe {\n          display: block;\n          width: 100%;\n          height: 100%;\n          border: 0;\n        }\n        .header + iframe {\n          height: calc(100% - 40px);\n        }\n        .header {\n          display: flex;\n          align-items: center;\n          font-size: 16px;\n          height: 40px;\n          padding: 0 16px;\n          pointer-events: none;\n          background-color: var(--app-header-background-color);\n          font-weight: 400;\n          color: var(--app-header-text-color, white);\n          border-bottom: var(--app-header-border-bottom, none);\n          box-sizing: border-box;\n          --mdc-icon-size: 20px;\n        }\n\n        .main-title {\n          margin: 0 0 0 24px;\n          line-height: 20px;\n          flex-grow: 1;\n        }\n\n        mwc-icon-button {\n          pointer-events: auto;\n        }\n\n        hass-subpage {\n          --app-header-background-color: var(--sidebar-background-color);\n          --app-header-text-color: var(--sidebar-text-color);\n          --app-header-border-bottom: 1px solid var(--divider-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-aiszigbee\": ConfigAisZigbee;\n  }\n}\n"],"names":[],"sourceRoot":""}