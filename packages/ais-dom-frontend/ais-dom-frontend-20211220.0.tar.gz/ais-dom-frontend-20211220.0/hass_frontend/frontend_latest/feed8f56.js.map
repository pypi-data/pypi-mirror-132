{"version":3,"file":"feed8f56.js","mappings":";;AAwFA;;;;;;;;;;;;;;;;AAiBA;AACA;;AAEA;;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA1FA","sources":["webpack://home-assistant-frontend/./src/panels/lovelace/cards/energy/hui-energy-solar-consumed-gauge-card.ts"],"sourcesContent":["import { mdiInformation } from \"@mdi/js\";\nimport \"@polymer/paper-tooltip\";\nimport { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { styleMap } from \"lit/directives/style-map\";\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-gauge\";\nimport \"../../../../components/ha-svg-icon\";\nimport {\n  EnergyData,\n  energySourcesByType,\n  getEnergyDataCollection,\n} from \"../../../../data/energy\";\nimport { calculateStatisticsSumGrowth } from \"../../../../data/history\";\nimport { SubscribeMixin } from \"../../../../mixins/subscribe-mixin\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport type { LovelaceCard } from \"../../types\";\nimport { severityMap } from \"../hui-gauge-card\";\nimport type { EnergySolarGaugeCardConfig } from \"../types\";\n\n@customElement(\"hui-energy-solar-consumed-gauge-card\")\nclass HuiEnergySolarGaugeCard\n  extends SubscribeMixin(LitElement)\n  implements LovelaceCard\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @state() private _config?: EnergySolarGaugeCardConfig;\n\n  @state() private _data?: EnergyData;\n\n  public hassSubscribe(): UnsubscribeFunc[] {\n    return [\n      getEnergyDataCollection(this.hass!, {\n        key: this._config?.collection_key,\n      }).subscribe((data) => {\n        this._data = data;\n      }),\n    ];\n  }\n\n  public getCardSize(): number {\n    return 4;\n  }\n\n  public setConfig(config: EnergySolarGaugeCardConfig): void {\n    this._config = config;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config || !this.hass) {\n      return html``;\n    }\n\n    if (!this._data) {\n      return html`Loading...`;\n    }\n\n    const prefs = this._data.prefs;\n    const types = energySourcesByType(prefs);\n\n    if (!types.solar) {\n      return html``;\n    }\n\n    const totalSolarProduction = calculateStatisticsSumGrowth(\n      this._data.stats,\n      types.solar.map((source) => source.stat_energy_from)\n    );\n\n    const productionReturnedToGrid = calculateStatisticsSumGrowth(\n      this._data.stats,\n      types.grid![0].flow_to.map((flow) => flow.stat_energy_to)\n    );\n\n    let value: number | undefined;\n\n    if (productionReturnedToGrid !== null && totalSolarProduction) {\n      const consumedSolar = Math.max(\n        0,\n        totalSolarProduction - productionReturnedToGrid\n      );\n      value = (consumedSolar / totalSolarProduction) * 100;\n    }\n\n    return html`\n      <ha-card>\n        ${value !== undefined\n          ? html`\n              <ha-svg-icon id=\"info\" .path=${mdiInformation}></ha-svg-icon>\n              <paper-tooltip animation-delay=\"0\" for=\"info\" position=\"left\">\n                <span>\n                  This card indicates how much of the solar energy you produced\n                  was used by your home instead of being returned to the grid.\n                  <br /><br />\n                  If this number is typically very low, indicating excess solar\n                  production, you might want to consider charging a home battery\n                  or electric car from your solar panels at times of high solar\n                  production.\n                </span>\n              </paper-tooltip>\n              <ha-gauge\n                min=\"0\"\n                max=\"100\"\n                .value=${value}\n                .locale=${this.hass!.locale}\n                label=\"%\"\n                style=${styleMap({\n                  \"--gauge-color\": this._computeSeverity(value),\n                })}\n              ></ha-gauge>\n              <div class=\"name\">Self-consumed solar energy</div>\n            `\n          : totalSolarProduction === 0\n          ? \"You have not produced any solar energy\"\n          : \"Self-consumed solar energy couldn't be calculated\"}\n      </ha-card>\n    `;\n  }\n\n  private _computeSeverity(numberValue: number): string {\n    if (numberValue > 75) {\n      return severityMap.green;\n    }\n    if (numberValue < 50) {\n      return severityMap.yellow;\n    }\n    return severityMap.normal;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      ha-card {\n        height: 100%;\n        overflow: hidden;\n        padding: 16px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n        box-sizing: border-box;\n      }\n\n      ha-gauge {\n        width: 100%;\n        max-width: 250px;\n      }\n\n      .name {\n        text-align: center;\n        line-height: initial;\n        color: var(--primary-text-color);\n        width: 100%;\n        font-size: 15px;\n        margin-top: 8px;\n      }\n\n      ha-svg-icon {\n        position: absolute;\n        right: 4px;\n        top: 4px;\n        color: var(--secondary-text-color);\n      }\n      paper-tooltip > span {\n        font-size: 12px;\n        line-height: 12px;\n      }\n      paper-tooltip {\n        width: 80%;\n        max-width: 250px;\n        top: 8px !important;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-energy-solar-consumed-gauge-card\": HuiEnergySolarGaugeCard;\n  }\n}\n"],"names":[],"sourceRoot":""}