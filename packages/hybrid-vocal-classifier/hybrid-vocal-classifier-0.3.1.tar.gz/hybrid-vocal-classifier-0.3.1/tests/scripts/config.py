"""utility functions for tests"""
import os
import copy

import yaml


def rewrite_config(config_filename, config_output_dir, replace_dict):
    """rewrites config files,
    e.g. to insert name of temporary directories

    Parameters
    ----------
    config_filename : str
        absolute path to config file that is being rewritten
    config_output_dir : str
        absolute path to config file to where rewritten config should be saved
    replace_dict : dict
        keys are strings to search for
        values are 2-element tuples
            element 1: another string to search for
            element 2: string put in place of element 1
        used to find keys and values in config dicts
        i.e. first match key from replace_dict with key in config_dict,
        then replace val in config dict (element 1) with actual val (element 2)
        element 2 will be the name of the temporary directory generated by pytest

    Returns
    -------
    save_filename : str
        filename with absolute path which config file should be saved as after rewrite
    """

    # find key in config dict and replace value for that key
    with open(config_filename) as config_file:
        config_as_list = config_file.readlines()
    for key, val_tuple in replace_dict.items():
        for ind, line in enumerate(config_as_list):
            if key in line:
                config_as_list[ind] = config_as_list[ind].replace(
                    val_tuple[0], val_tuple[1]
                )

    save_filename = os.path.join(
        str(config_output_dir), os.path.basename(config_filename)[:-3] + "rewrite.yml"
    )

    # write to file in temporary configs dir
    with open(save_filename, "w") as tmp_config_file:
        tmp_config_file.writelines(config_as_list)

    # now open yaml and rewrite paths as absolute, if necessary
    # (for extract and predict where data_dir path relative to
    # tests directory won't work when config is in tmp_output_dir ...
    # (don't save rewritten config in test dir because that
    # makes annoying extra files every time you run the test))
    with open(save_filename, "r") as yml:
        config_yaml = yaml.load(yml, Loader=yaml.FullLoader)

    if "extract" in config_yaml:
        config_type = "extract"
    elif "select" in config_yaml:
        config_type = "select"
    elif "predict" in config_yaml:
        config_type = "predict"

    if config_type in ("extract", "predict"):
        config_copy = copy.deepcopy(config_yaml)
        for key, val in config_yaml[config_type].items():
            if key == "todo_list":
                for todo_ind, todo in enumerate(val):
                    for todo_key, todo_val in todo.items():
                        if todo_key == "data_dirs":
                            new_data_dirs = []
                            for data_dir in todo_val:
                                new_data_dirs.append(
                                    os.path.join(
                                        os.path.dirname(config_filename),
                                        os.path.normpath(data_dir),
                                    )
                                )
                            config_copy[config_type]["todo_list"][todo_ind][
                                "data_dirs"
                            ] = new_data_dirs

        with open(save_filename, "w") as save_again:
            yaml.dump(config_copy, save_again, default_flow_style=False)

    return save_filename
