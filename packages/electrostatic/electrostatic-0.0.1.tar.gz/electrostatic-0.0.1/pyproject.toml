[tool.poetry]
name = "electrostatic"
version = "0.0.1"
repository = "https://github.com/LucidDan/electrostatic"
description = "Application or middleware to serve static files over ASGI or WSGI"
authors = ["Dan Sloan <dan@lucidhorizons.com.au>"]
readme = "README.md"
license =  "MIT"
keywords = ["asgi", "staticfiles", "web", "server", "wsgi"]
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
]
packages = [
    { include = "electrostatic" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"
# Do not add non-optional dependencies here without serious consideration.
# A key objective of this project is to maintain a minimal dependency footprint.
# We do need asgiref, so that we have decent types for ASGI.
asgiref = "^3.4.1"
watchdog = {version="^2.1.6", optional=true}

[tool.poetry.dev-dependencies]
black  = { version = "^21.12b0"}
isort  = { version = "^5.10.1"}
mypy = {version = "^0.930"}
pytest  = { version = "^6.2.4"}
pytest-cov  = { version = "^3.0.0"}
pytest-asyncio = "^0.16.0"
pre-commit = {version = "^2.16.0"}
async-asgi-testclient = { git = "https://github.com/LucidDan/async-asgi-testclient.git", branch = "poetry" }
#mkdocs  = { version = "^1.1.2"}
#mkdocs-include-markdown-plugin  = { version = "^3.2.3"}
#mkdocs-material  = { version = "^8.1.3"}
#mkdocstrings  = { version = "^0.17.0"}
#mkdocs-material-extensions  = { version = "^1.0.1"}
#mkdocs-autorefs = {version = "^0.3.1"}
#toml = {version = "^0.10.2"}
#bump2version = {version = "^1.0.1"}

tox  = { version = "^3.20.1", optional = true}
uvicorn = {version = "*", optional = true}
daphne = {version = "*", optional = true}
Hypercorn = {version = "*", optional = true }

[tool.poetry.extras]
watchdog = ["watchdog"]

[tool.isort]
profile = "black"

[build-system]
# https://github.com/pypa/pip/issues/10742
# https://github.com/pypa/setuptools/issues/2980#issuecomment-999040464
# https://github.com/python-poetry/poetry/issues/4915
# For now, we include setuptools in build requires to work around above issue(s)
requires = ["poetry-core>=1.0.0", "setuptools"]
build-backend = "poetry.core.masonry.api"

# Not using tox in the Github Actions CI, but it provides similar functionality for
# doing local matrix testing
[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist = py37, py38, py39, py310

[testenv]
whitelist_externals = poetry
commands =
    poetry install -v
    poetry run pytest tests/
"""
