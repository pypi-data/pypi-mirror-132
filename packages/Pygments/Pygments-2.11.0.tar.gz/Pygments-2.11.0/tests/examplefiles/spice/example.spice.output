'// Function to compute fibonacci numbers recursively\n' Comment.Single

'f'           Keyword.Declaration
'<'           Punctuation
'int'         Keyword.Type
'>'           Punctuation
' '           Text.Whitespace
'fib'         Name.Other
'('           Punctuation
'int'         Keyword.Type
' '           Text.Whitespace
'n'           Name.Other
')'           Punctuation
' '           Text.Whitespace
'{'           Punctuation
'\n'          Text.Whitespace

'    '        Text.Whitespace
'if'          Keyword
' '           Text.Whitespace
'n'           Name.Other
' '           Text.Whitespace
'<='          Operator
' '           Text.Whitespace
'2'           Literal.Number.Integer
' '           Text.Whitespace
'{'           Punctuation
'\n'          Text.Whitespace

'        '    Text.Whitespace
'return'      Name.Other
' '           Text.Whitespace
'1'           Literal.Number.Integer
';'           Punctuation
'\n'          Text.Whitespace

'    '        Text.Whitespace
'}'           Punctuation
'\n'          Text.Whitespace

'    '        Text.Whitespace
'return'      Name.Other
' '           Text.Whitespace
'fib'         Name.Other
'('           Punctuation
'n'           Name.Other
' '           Text.Whitespace
'-'           Operator
' '           Text.Whitespace
'1'           Literal.Number.Integer
')'           Punctuation
' '           Text.Whitespace
'+'           Operator
' '           Text.Whitespace
'fib'         Name.Other
'('           Punctuation
'n'           Name.Other
' '           Text.Whitespace
'-'           Operator
' '           Text.Whitespace
'2'           Literal.Number.Integer
')'           Punctuation
';'           Punctuation
'\n'          Text.Whitespace

'}'           Punctuation
'\n'          Text.Whitespace

'\n'          Text.Whitespace

'// Function to compute factorial numbers recursively\n' Comment.Single

'f'           Keyword.Declaration
'<'           Punctuation
'int'         Keyword.Type
'>'           Punctuation
' '           Text.Whitespace
'fac'         Name.Other
'('           Punctuation
'int'         Keyword.Type
' '           Text.Whitespace
'input'       Name.Other
')'           Punctuation
' '           Text.Whitespace
'{'           Punctuation
'\n'          Text.Whitespace

'    '        Text.Whitespace
'if'          Keyword
' '           Text.Whitespace
'input'       Name.Other
' '           Text.Whitespace
'<'           Punctuation
' '           Text.Whitespace
'2'           Literal.Number.Integer
' '           Text.Whitespace
'{'           Punctuation
'\n'          Text.Whitespace

'        '    Text.Whitespace
'return'      Name.Other
' '           Text.Whitespace
'1'           Literal.Number.Integer
';'           Punctuation
'\n'          Text.Whitespace

'    '        Text.Whitespace
'}'           Punctuation
'\n'          Text.Whitespace

'    '        Text.Whitespace
'result'      Name.Other
' '           Text.Whitespace
'='           Punctuation
' '           Text.Whitespace
'input'       Name.Other
' '           Text.Whitespace
'*'           Operator
' '           Text.Whitespace
'fac'         Name.Other
'('           Punctuation
'input'       Name.Other
' '           Text.Whitespace
'-'           Operator
' '           Text.Whitespace
'1'           Literal.Number.Integer
')'           Punctuation
';'           Punctuation
'\n'          Text.Whitespace

'}'           Punctuation
'\n'          Text.Whitespace

'\n'          Text.Whitespace

'/*\n* Entry point of the program\n*/' Comment.Multiline
'\n'          Text.Whitespace

'f'           Keyword.Declaration
'<'           Punctuation
'int'         Keyword.Type
'>'           Punctuation
' '           Text.Whitespace
'main'        Name.Other
'('           Punctuation
')'           Punctuation
' '           Text.Whitespace
'{'           Punctuation
'\n'          Text.Whitespace

'    '        Text.Whitespace
'int'         Keyword.Type
' '           Text.Whitespace
'number'      Name.Other
' '           Text.Whitespace
'='           Punctuation
' '           Text.Whitespace
'10'          Literal.Number.Integer
';'           Punctuation
'\n'          Text.Whitespace

'    '        Text.Whitespace
'printf'      Name.Builtin
'('           Punctuation
'"Fibonacci of %d: %d"' Literal.String
','           Punctuation
' '           Text.Whitespace
'number'      Name.Other
','           Punctuation
' '           Text.Whitespace
'fib'         Name.Other
'('           Punctuation
'number'      Name.Other
')'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text.Whitespace

'    '        Text.Whitespace
'number'      Name.Other
' '           Text.Whitespace
'+='          Operator
' '           Text.Whitespace
'1'           Literal.Number.Integer
';'           Punctuation
'\n'          Text.Whitespace

'    '        Text.Whitespace
'printf'      Name.Builtin
'('           Punctuation
'"Faculty of %d: %d"' Literal.String
','           Punctuation
' '           Text.Whitespace
'number'      Name.Other
','           Punctuation
' '           Text.Whitespace
'fac'         Name.Other
'('           Punctuation
'number'      Name.Other
')'           Punctuation
')'           Punctuation
';'           Punctuation
'\n'          Text.Whitespace

'}'           Punctuation
'\n'          Text.Whitespace
