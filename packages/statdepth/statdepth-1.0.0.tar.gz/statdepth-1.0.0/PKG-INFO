Metadata-Version: 2.1
Name: statdepth
Version: 1.0.0
Summary: A library for computing statistical depth for univariate and multivariate functional data, and pointcloud data. Additionally, methods for homogeneity testing and visualization are provided.
Home-page: https://github.com/braingeneers/statdepth
Author: Julian Lehrer
Author-email: jmlehrer@ucsc.edu
License: GPL license
Keywords: statdepth
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v2 (GPLv2)
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Requires-Python: >=3.6
License-File: LICENSE
License-File: AUTHORS.rst

# statdepth: Depth Calculation Methods 
Read the docs at [https://statdepth.readthedocs.io/en/latest/](https://statdepth.readthedocs.io/en/latest/).

This package implements depth calculation and visualization methods for univariate time series data, multivariate time series data, and pointcloud data. This README will now mostly be development information. To see how to use the package, visit the documentation at the link above.

# Development

To install from `pip`, run
```
pip install statdepth
```

To install locally, run

```
pip install .
```

Or to install directly from this repo,
```
pip install git+https://github.com/braingeneers/functional_depth_methods
```

To set up the development environment as a Conda env, run
```
conda env create --file environment.yml
```

This code is written in Python, with most methods written in [Numpy](https://numpy.org/). It also uses [numba](https://numba.pydata.org/), a high performance Python compiler. Numba-compiled numerical algorithms in Python can approach the speeds of C or FORTRAN, so this should remove any speed issues Python has. 

Depending on how this ends up being used, [dask](https://dask.org/) may also be implemented for parallelization. 


=======
History
=======

0.1.0 (2020-12-30)
------------------

* First release on PyPI.


