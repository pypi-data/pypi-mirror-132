{"version":3,"file":"lib_index_js.be1e036af2685cb69c33.js","mappings":";;;;;;;;;;;;;;;;;;AAAwD;AACH;AACrD;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAAa;AACxC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,mBAAmB,kEAAkB,SAAS,mBAAmB;AACjE;AACA;AACA,iEAAe,MAAM,EAAC","sources":["webpack://jupyterlab_linewrapcellouput/./lib/index.js"],"sourcesContent":["import { DisposableDelegate } from '@lumino/disposable';\r\nimport { ToolbarButton } from '@jupyterlab/apputils';\r\nfunction JupyterLabLineWrapCellOuputOn() {\r\n    var divs = document.querySelectorAll(\".jp-OutputArea-output pre\");\r\n    for (let i = 0; i < divs.length; i++) {\r\n        var div = divs[i];\r\n        if (div.style['whiteSpace'] != \"pre\")\r\n            div.style[\"whiteSpace\"] = \"pre\";\r\n    }\r\n}\r\nfunction JupyterLabLineWrapCellOuputOff() {\r\n    var divs = document.querySelectorAll(\".jp-OutputArea-output pre\");\r\n    for (let i = 0; i < divs.length; i++) {\r\n        var div = divs[i];\r\n        if (div.style['whiteSpace'] != \"pre-wrap\")\r\n            div.style[\"whiteSpace\"] = \"pre-wrap\";\r\n    }\r\n}\r\n/**\r\n * Initialization data for the jupyterlab_linewrapcelloutput extension.\r\n */\r\nconst plugin = {\r\n    id: 'jupyterlab_linewrapcelloutput:plugin',\r\n    autoStart: true,\r\n    activate: (app) => {\r\n        console.log('JupyterLab extension jupyterlab_linewrapcelloutput is activated!');\r\n        app.docRegistry.addWidgetExtension('Notebook', new ButtonLineWrapCellOutput());\r\n    }\r\n};\r\nexport class ButtonLineWrapCellOutput {\r\n    createNew(panel, context) {\r\n        const triggerLineWrapCellOutput = () => {\r\n            if (SET) {\r\n                SET = false;\r\n                console.log('Extension jupyterlab_linewrapcelloutput disabled');\r\n                clearInterval(t);\r\n                JupyterLabLineWrapCellOuputOff();\r\n                if (button.hasClass('selected'))\r\n                    button.removeClass('selected');\r\n            }\r\n            else {\r\n                SET = true;\r\n                console.log('Extension jupyterlab_linewrapcelloutput enabled');\r\n                t = setInterval(JupyterLabLineWrapCellOuputOn, 10);\r\n                button.addClass('selected');\r\n            }\r\n        };\r\n        const button = new ToolbarButton({\r\n            className: 'buttonLineWrapCellOuput',\r\n            iconClass: 'wll-WrapIcon',\r\n            label: 'wrap',\r\n            onClick: triggerLineWrapCellOutput,\r\n            tooltip: 'Line Wrap Cell Ouput'\r\n        });\r\n        panel.toolbar.insertItem(10, 'LineWrapCellOutput', button);\r\n        var SET = true;\r\n        var t = setInterval(JupyterLabLineWrapCellOuputOn, 10);\r\n        button.addClass('selected');\r\n        return new DisposableDelegate(() => { button.dispose(); });\r\n    }\r\n}\r\nexport default plugin;\r\n"],"names":[],"sourceRoot":""}