Metadata-Version: 2.1
Name: aa-alumni
Version: 0.1.0a0
Summary: Alliance Auth Plugin
Home-page: https://gitlab.com/tactical-supremacy/aa-alumni
Author: Joel Falknau
Author-email: joel.falknau@gmail.com
License: GNU General Public License v3 (GPLv3)
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 3.2
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Requires-Python: ~=3.7
Description-Content-Type: text/markdown
License-File: LICENSE

# Alliance Auth - Alumni

## Features

- Integration with Alliance Auth's State System, creates an maintains an Alumni State to ensure no services access is granted to Blacklisted users

## Installation

### Step 1 - Prepare Auth
Remove/Promote any state with a priority of `1`, Alumni is considered slightly better than the built in Guest State.
### Step 2 - Install from pip
```bash
pip install git+https://gitlab.com/tactical-supremacy/aa-gdpr.git
```

### Step 3 - Configure Auth settings
Configure your Auth settings (`local.py`) as follows:

- Add `'alumni'` to `INSTALLED_APPS`
- Add below lines to your settings file:

```python
## Settings for AA-Alumni
# Market Orders
CELERYBEAT_SCHEDULE['alumni_run_alumni_check_all'] = {
    'task': 'alumni.tasks.run_alumni_check_all',
    'schedule': crontab(minute=0, hour=0, day_of_week=4),
}
CELERYBEAT_SCHEDULE['alumni_run_update_all_models'] = {
    'task': 'alumni.tasks.update_all_models',
    'schedule': crontab(minute=0, hour=0, day_of_week=3),
}
```

### Step 4 - Update AA's State system

```bash
python myauth/manage.py alumni_state
```

### Step 5 - Maintain Alliance Auth
- Run migrations `python manage.py migrate`
- Gather your staticfiles `python manage.py collectstatic`
- Restart your project `supervisorctl restart myauth:`

## Contributing
Make sure you have signed the [License Agreement](https://developers.eveonline.com/resource/license-agreement) by logging in at <https://developers.eveonline.com> before submitting any pull requests. All bug fixes or features must not include extra superfluous formatting changes.


