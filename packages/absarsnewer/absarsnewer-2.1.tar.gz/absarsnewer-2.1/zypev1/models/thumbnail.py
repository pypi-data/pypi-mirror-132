# -*- coding: utf-8 -*-

"""
zypev1

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Thumbnail(object):

    """Implementation of the 'Thumbnail' model.

    TODO: type model description here.

    Attributes:
        aspect_ration (float): TODO: type description here.
        height (float): Height of the image in pixels
        width (float): Width of the image in pixels
        name (string): Custom name of the thumbnail
        url (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "aspect_ration": 'aspect_ration',
        "height": 'height',
        "width": 'width',
        "name": 'name',
        "url": 'url'
    }

    def __init__(self,
                 aspect_ration=None,
                 height=None,
                 width=None,
                 name=None,
                 url=None):
        """Constructor for the Thumbnail class"""

        # Initialize members of the class
        self.aspect_ration = aspect_ration
        self.height = height
        self.width = width
        self.name = name
        self.url = url

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        aspect_ration = dictionary.get('aspect_ration')
        height = dictionary.get('height')
        width = dictionary.get('width')
        name = dictionary.get('name')
        url = dictionary.get('url')

        # Return an object of this model
        return cls(aspect_ration,
                   height,
                   width,
                   name,
                   url)
