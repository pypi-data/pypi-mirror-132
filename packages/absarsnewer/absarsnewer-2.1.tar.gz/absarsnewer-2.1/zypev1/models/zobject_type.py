# -*- coding: utf-8 -*-

"""
zypev1

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class ZobjectType(object):

    """Implementation of the 'ZobjectType' model.

    TODO: type model description here.

    Attributes:
        description (string): Description of the Zobject Type
        title (string): Title of the Zobject Type (must be unique)
        videos_enabled (bool): Indicates whether videos can be associated with
            instances of the Zobject Type

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "description": 'description',
        "title": 'title',
        "videos_enabled": 'videos_enabled'
    }

    def __init__(self,
                 description=None,
                 title=None,
                 videos_enabled=None):
        """Constructor for the ZobjectType class"""

        # Initialize members of the class
        self.description = description
        self.title = title
        self.videos_enabled = videos_enabled

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        description = dictionary.get('description')
        title = dictionary.get('title')
        videos_enabled = dictionary.get('videos_enabled')

        # Return an object of this model
        return cls(description,
                   title,
                   videos_enabled)
