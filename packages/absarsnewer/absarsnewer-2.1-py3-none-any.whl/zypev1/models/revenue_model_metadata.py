# -*- coding: utf-8 -*-

"""
zypev1

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class RevenueModelMetadata(object):

    """Implementation of the 'RevenueModelMetadata' model.

    TODO: type model description here.

    Attributes:
        id (string): TODO: type description here.
        created_at (string): TODO: type description here.
        image_content_type (string): TODO: type description here.
        image_file_name (string): TODO: type description here.
        image_file_size (string): TODO: type description here.
        image_fingerprint (string): TODO: type description here.
        image_updated_at (string): TODO: type description here.
        name (string): TODO: type description here.
        updated_at (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id": '_id',
        "created_at": 'created_at',
        "image_content_type": 'image_content_type',
        "image_file_name": 'image_file_name',
        "image_file_size": 'image_file_size',
        "image_fingerprint": 'image_fingerprint',
        "image_updated_at": 'image_updated_at',
        "name": 'name',
        "updated_at": 'updated_at'
    }

    def __init__(self,
                 id=None,
                 created_at=None,
                 image_content_type=None,
                 image_file_name=None,
                 image_file_size=None,
                 image_fingerprint=None,
                 image_updated_at=None,
                 name=None,
                 updated_at=None):
        """Constructor for the RevenueModelMetadata class"""

        # Initialize members of the class
        self.id = id
        self.created_at = created_at
        self.image_content_type = image_content_type
        self.image_file_name = image_file_name
        self.image_file_size = image_file_size
        self.image_fingerprint = image_fingerprint
        self.image_updated_at = image_updated_at
        self.name = name
        self.updated_at = updated_at

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get('_id')
        created_at = dictionary.get('created_at')
        image_content_type = dictionary.get('image_content_type')
        image_file_name = dictionary.get('image_file_name')
        image_file_size = dictionary.get('image_file_size')
        image_fingerprint = dictionary.get('image_fingerprint')
        image_updated_at = dictionary.get('image_updated_at')
        name = dictionary.get('name')
        updated_at = dictionary.get('updated_at')

        # Return an object of this model
        return cls(id,
                   created_at,
                   image_content_type,
                   image_file_name,
                   image_file_size,
                   image_fingerprint,
                   image_updated_at,
                   name,
                   updated_at)
