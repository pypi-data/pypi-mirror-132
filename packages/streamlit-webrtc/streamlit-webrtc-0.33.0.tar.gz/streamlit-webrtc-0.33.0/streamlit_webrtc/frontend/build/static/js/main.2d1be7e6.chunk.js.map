{"version":3,"sources":["ThemeProvider.tsx","DeviceSelector/DeviceSelectPopper.tsx","DeviceSelector/index.tsx","MediaStreamPlayer.tsx","Placeholder.tsx","media-constraint.ts","webrtc/reducer.ts","webrtc/index.ts","component-value.ts","WebRtcStreamer.tsx","index.tsx","DeviceSelector/DeviceSelector.tsx"],"names":["ThemeProvider","props","stTheme","useRenderData","theme","stThemeJson","JSON","stringify","muiTheme","React","useMemo","parse","textColorScale","chroma","scale","textColor","backgroundColor","mode","createTheme","palette","primary","main","primaryColor","background","default","paper","secondaryBackgroundColor","text","secondary","hex","disabled","typography","fontFamily","font","children","StyledPaper","styled","Paper","padding","spacing","StyledFormControl","FormControl","maxWidth","margin","minWidth","display","StyledFormButtonControl","marginBottom","DeviceSelectPopper","open","anchorEl","videoEnabled","audioEnabled","value","devicesMap","onSubmit","useState","selectedVideo","setSelectedVideo","selectedAudio","setSelectedAudio","useEffect","video","find","d","deviceId","audio","handleSubmit","useCallback","e","preventDefault","originalBodyHeightRef","useRef","popperRefFn","popper","setTimeout","body","document","getElementsByTagName","current","style","height","window","getComputedStyle","scrollBottom","WebKitCSSMatrix","transform","m42","getBoundingClientRect","scrollHeight","Streamlit","setFrameHeight","Popper","ref","placement","InputLabel","id","labelId","devices","onChange","Button","type","variant","color","DeviceSelector","onSelect","setOpen","setAnchorEl","setDevicesMap","unavailable","setUnavailable","onOpen","event","currentTarget","navigator","mediaDevices","enumerateDevices","undefined","then","vidoeDevices","audioDevices","device","kind","push","onClose","Box","onClick","memo","MediaStreamPlayer","hasVideo","stream","getVideoTracks","length","refCallback","node","srcObject","refreshFrameHeight","videoProps","hidden","userDefinedVideoAttrs","autoPlay","controls","controlsList","crossOrigin","loop","mediaGroup","muted","playsInline","preload","poster","width","disablePictureInPicture","disableRemotePlayback","onCanPlay","audioProps","userDefinedAudioAttrs","justifyContent","alignItems","Placeholder","elevation","loading","CircularProgress","fontSize","compileMediaConstraints","src","videoDeviceId","audioDeviceId","constraints","initialState","webRtcState","sdpOffer","signallingTimedOut","error","connectReducer","onComponentValueChange","state","action","nextState","offer","reducer","nextPlaying","playingChanged","nextSdpOffer","prevSdpOffer","console","log","playing","toJSON","isWebRtcMode","val","setupOffer","pc","createOffer","setLocalDescription","Promise","resolve","iceGatheringState","addEventListener","checkState","removeEventListener","localDescription","catch","err","setComponentValue","componentValue","WebRtcStreamerInner","constraintsFromPython","setDevices","videoInput","audioInput","signallingTimerRef","pcRef","useReducer","dispatch","stop","a","getTransceivers","forEach","transceiver","getSenders","sender","track","close","stopInner","finally","stopRef","start","config","rtcConfiguration","RTCPeerConnection","evt","streams","mediaStreamConstraints","Error","getUserMedia","getTracks","addTrack","direction","addTransceiver","iceConnectionState","startInner","sdpAnswerJson","remoteDescription","sdpAnswer","setRemoteDescription","clearTimeout","desiredPlayingState","useWebRtc","buttonDisabled","receivable","isReceivable","transmittable","isTransmittable","handleDeviceSelect","Alert","severity","name","message","py","videoHtmlAttrs","audioHtmlAttrs","WebRtcStreamer","renderData","args","rtc_configuration","media_stream_constraints","video_html_attrs","audio_html_attrs","ReactDOM","render","StrictMode","CssBaseline","getElementById","StyledSelect","Select","marginTop","DeviceSelecter","onChangeProp","selected","target","aria-label","setImmediate","map","label"],"mappings":"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","file":"static/js/main.2d1be7e6.chunk.js","sourcesContent":["import React from \"react\";\nimport { Theme } from \"streamlit-component-lib\";\nimport { useRenderData } from \"streamlit-component-lib-react-hooks\";\nimport {\n  createTheme,\n  ThemeProvider as MuiThemeProvider,\n} from \"@mui/material/styles\";\nimport chroma from \"chroma-js\";\n\ninterface StreamlitThemeProviderProps {}\nexport const ThemeProvider: React.VFC<\n  React.PropsWithChildren<StreamlitThemeProviderProps>\n> = (props) => {\n  const { theme: stTheme } = useRenderData();\n\n  const stThemeJson = JSON.stringify(stTheme);\n  const muiTheme = React.useMemo(() => {\n    const stTheme: Theme = JSON.parse(stThemeJson);\n    if (stTheme == null) {\n      return undefined;\n    }\n\n    const textColorScale = chroma\n      .scale([stTheme.textColor, stTheme.backgroundColor])\n      .mode(\"lab\");\n\n    return createTheme({\n      palette: {\n        primary: {\n          main: stTheme.primaryColor,\n        },\n        background: {\n          default: stTheme.backgroundColor,\n          paper: stTheme.secondaryBackgroundColor,\n        },\n        text: {\n          primary: stTheme.textColor,\n          secondary: textColorScale(0.1).hex(),\n          disabled: textColorScale(0.5).hex(),\n        },\n      },\n      typography: {\n        fontFamily: stTheme.font,\n      },\n    });\n  }, [stThemeJson]);\n\n  if (muiTheme == null) {\n    return <>{props.children}</>;\n  }\n\n  return <MuiThemeProvider theme={muiTheme}>{props.children}</MuiThemeProvider>;\n};\n\nexport default ThemeProvider;\n","import React, { useState, useCallback, useRef, useEffect } from \"react\";\nimport { Streamlit } from \"streamlit-component-lib\";\nimport Button from \"@mui/material/Button\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Popper, { PopperProps } from \"@mui/material/Popper\";\nimport Paper from \"@mui/material/Paper\";\nimport { styled } from \"@mui/material/styles\";\nimport DeviceSelecter from \"./DeviceSelector\";\nimport { DevicesMap } from \"./types\";\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(2),\n}));\nconst StyledFormControl = styled(FormControl)(({ theme }) => ({\n  maxWidth: \"80vw\",\n  margin: theme.spacing(1),\n  minWidth: 120,\n  display: \"flex\",\n}));\nconst StyledFormButtonControl = styled(FormControl)(({ theme }) => ({\n  margin: theme.spacing(2),\n  marginBottom: theme.spacing(1),\n  minWidth: 120,\n  display: \"flex\",\n}));\n\ninterface DeviceSelectPopperProps {\n  open: boolean;\n  anchorEl: PopperProps[\"anchorEl\"];\n  videoEnabled: boolean;\n  audioEnabled: boolean;\n  value: {\n    video: MediaDeviceInfo | null;\n    audio: MediaDeviceInfo | null;\n  };\n  devicesMap: DevicesMap;\n  onSubmit: (\n    video: MediaDeviceInfo | null,\n    audio: MediaDeviceInfo | null\n  ) => void;\n}\nconst DeviceSelectPopper: React.VFC<DeviceSelectPopperProps> = ({\n  open,\n  anchorEl,\n  videoEnabled,\n  audioEnabled,\n  value,\n  devicesMap,\n  onSubmit,\n}) => {\n  const [selectedVideo, setSelectedVideo] = useState<MediaDeviceInfo | null>(\n    null\n  );\n  const [selectedAudio, setSelectedAudio] = useState<MediaDeviceInfo | null>(\n    null\n  );\n\n  useEffect(() => {\n    setSelectedVideo(\n      devicesMap.video.find((d) => d.deviceId === value.video?.deviceId) || null\n    );\n    setSelectedAudio(\n      devicesMap.audio.find((d) => d.deviceId === value.audio?.deviceId) || null\n    );\n  }, [devicesMap, value]);\n\n  const handleSubmit = useCallback<\n    NonNullable<React.ComponentProps<\"form\">[\"onSubmit\"]>\n  >(\n    (e) => {\n      e.preventDefault();\n      onSubmit(\n        videoEnabled ? selectedVideo : null,\n        audioEnabled ? selectedAudio : null\n      );\n    },\n    [onSubmit, videoEnabled, audioEnabled, selectedVideo, selectedAudio]\n  );\n\n  const originalBodyHeightRef = useRef<string>();\n  const popperRefFn = useCallback((popper: HTMLDivElement | null) => {\n    // Manage <body>'s height reacting to popper appearance.\n    if (popper) {\n      setTimeout(() => {\n        const body = document.getElementsByTagName(\"body\")[0];\n        originalBodyHeightRef.current = body.style.height;\n\n        const style = window.getComputedStyle(popper);\n        const matrix = new WebKitCSSMatrix(style.transform);\n        const translateY = matrix.m42;\n\n        const scrollBottom = translateY + popper.getBoundingClientRect().height;\n        if (scrollBottom > document.body.scrollHeight) {\n          body.style.height = `${scrollBottom}px`;\n          Streamlit.setFrameHeight();\n        }\n      }, 0);\n    } else {\n      setTimeout(() => {\n        const body = document.getElementsByTagName(\"body\")[0];\n        if (originalBodyHeightRef.current != null) {\n          body.style.height = originalBodyHeightRef.current;\n        }\n        Streamlit.setFrameHeight();\n      }, 0);\n    }\n  }, []);\n\n  return (\n    <Popper\n      ref={popperRefFn}\n      open={open}\n      anchorEl={anchorEl}\n      placement=\"left-end\"\n    >\n      <StyledPaper>\n        <form onSubmit={handleSubmit}>\n          {videoEnabled && (\n            <StyledFormControl>\n              <InputLabel id=\"video-input-select\">Video input</InputLabel>\n              <DeviceSelecter\n                labelId=\"video-input-select\"\n                devices={devicesMap.video}\n                value={selectedVideo}\n                onChange={setSelectedVideo}\n              />\n            </StyledFormControl>\n          )}\n          {audioEnabled && (\n            <StyledFormControl>\n              <InputLabel id=\"audio-input-select\">Audio input</InputLabel>\n              <DeviceSelecter\n                labelId=\"audio-input-select\"\n                devices={devicesMap.audio}\n                value={selectedAudio}\n                onChange={setSelectedAudio}\n              />\n            </StyledFormControl>\n          )}\n          <StyledFormButtonControl>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              OK\n            </Button>\n          </StyledFormButtonControl>\n        </form>\n      </StyledPaper>\n    </Popper>\n  );\n};\n\nexport default DeviceSelectPopper;\n","import React, { useState, useCallback } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button, { ButtonProps } from \"@mui/material/Button\";\nimport DeviceSelectPopper from \"./DeviceSelectPopper\";\nimport { DevicesMap } from \"./types\";\n\ninterface DeviceSelectorProps {\n  videoEnabled: boolean;\n  audioEnabled: boolean;\n  value: {\n    video: MediaDeviceInfo | null;\n    audio: MediaDeviceInfo | null;\n  };\n  onSelect: (\n    video: MediaDeviceInfo | null,\n    audio: MediaDeviceInfo | null\n  ) => void;\n}\nconst DeviceSelector: React.VFC<DeviceSelectorProps> = ({\n  videoEnabled,\n  audioEnabled,\n  value,\n  onSelect,\n}) => {\n  const [open, setOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n  const [devicesMap, setDevicesMap] = useState<DevicesMap>();\n  const [unavailable, setUnavailable] = useState(false);\n\n  const onOpen = useCallback<NonNullable<ButtonProps[\"onClick\"]>>((event) => {\n    setAnchorEl(event.currentTarget);\n\n    if (typeof navigator?.mediaDevices?.enumerateDevices !== \"function\") {\n      setDevicesMap(undefined);\n      setUnavailable(true);\n      return;\n    }\n\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\n      const vidoeDevices = [];\n      const audioDevices = [];\n      for (const device of devices) {\n        if (device.kind === \"videoinput\") {\n          vidoeDevices.push(device);\n        } else if (device.kind === \"audioinput\") {\n          audioDevices.push(device);\n        }\n      }\n      setDevicesMap({\n        video: vidoeDevices,\n        audio: audioDevices,\n      });\n      setOpen(true);\n    });\n  }, []);\n  const onClose = useCallback(() => setOpen(false), []);\n\n  const onSubmit = useCallback(\n    (video: MediaDeviceInfo | null, audio: MediaDeviceInfo | null) => {\n      setDevicesMap(undefined);\n      setOpen(false);\n      onSelect(video, audio);\n    },\n    [onSelect]\n  );\n\n  return (\n    <Box>\n      {unavailable && <p>Unavailable</p>}\n      {devicesMap && (\n        <DeviceSelectPopper\n          open={open}\n          anchorEl={anchorEl}\n          videoEnabled={videoEnabled}\n          audioEnabled={audioEnabled}\n          value={value}\n          devicesMap={devicesMap}\n          onSubmit={onSubmit}\n        />\n      )}\n      <Button color=\"inherit\" onClick={open ? onClose : onOpen}>\n        Select device\n      </Button>\n    </Box>\n  );\n};\n\nexport default React.memo(DeviceSelector);\n","import { Streamlit } from \"streamlit-component-lib\";\nimport React, {\n  useEffect,\n  useCallback,\n  VideoHTMLAttributes,\n  AudioHTMLAttributes,\n  HTMLAttributes,\n} from \"react\";\n\ntype UserDefinedHTMLVideoAttributes = Partial<\n  Omit<\n    VideoHTMLAttributes<HTMLVideoElement>,\n    keyof Omit<HTMLAttributes<HTMLVideoElement>, \"hidden\" | \"style\"> | \"src\"\n  >\n>;\ntype UserDefinedHTMLAudioAttributes = Partial<\n  Omit<\n    AudioHTMLAttributes<HTMLVideoElement>,\n    keyof Omit<HTMLAttributes<HTMLVideoElement>, \"hidden\" | \"style\"> | \"src\"\n  >\n>;\n\ninterface MediaStreamPlayerProps {\n  stream: MediaStream;\n  userDefinedVideoAttrs: UserDefinedHTMLVideoAttributes | undefined;\n  userDefinedAudioAttrs: UserDefinedHTMLAudioAttributes | undefined;\n}\nconst MediaStreamPlayer: React.VFC<MediaStreamPlayerProps> = (props) => {\n  useEffect(() => {\n    Streamlit.setFrameHeight();\n  });\n\n  const hasVideo = props.stream.getVideoTracks().length > 0;\n\n  const refCallback = useCallback(\n    (node: HTMLVideoElement | HTMLAudioElement | null) => {\n      if (node) {\n        node.srcObject = props.stream;\n      }\n    },\n    [props.stream]\n  );\n\n  const refreshFrameHeight = useCallback(() => Streamlit.setFrameHeight(), []);\n\n  if (hasVideo) {\n    // NOTE: Enumerate all allowed props instead of simply using spread operator\n    //       passing all the fields in props.userDefinedVideoAttrs\n    //       in order to block unexpected fields especially like dangerouslySetInnerHTML.\n    const videoProps: VideoHTMLAttributes<HTMLVideoElement> = {\n      hidden: props.userDefinedVideoAttrs?.hidden,\n      style: props.userDefinedVideoAttrs?.style,\n      autoPlay: props.userDefinedVideoAttrs?.autoPlay,\n      controls: props.userDefinedVideoAttrs?.controls,\n      controlsList: props.userDefinedVideoAttrs?.controlsList,\n      crossOrigin: props.userDefinedVideoAttrs?.crossOrigin,\n      loop: props.userDefinedVideoAttrs?.loop,\n      mediaGroup: props.userDefinedVideoAttrs?.mediaGroup,\n      muted: props.userDefinedVideoAttrs?.muted,\n      playsInline: props.userDefinedVideoAttrs?.playsInline,\n      preload: props.userDefinedVideoAttrs?.preload,\n      height: props.userDefinedVideoAttrs?.height,\n      poster: props.userDefinedVideoAttrs?.poster,\n      width: props.userDefinedVideoAttrs?.width,\n      disablePictureInPicture:\n        props.userDefinedVideoAttrs?.disablePictureInPicture,\n      disableRemotePlayback: props.userDefinedVideoAttrs?.disableRemotePlayback,\n    };\n\n    return (\n      <video {...videoProps} ref={refCallback} onCanPlay={refreshFrameHeight} />\n    );\n  } else {\n    const audioProps: AudioHTMLAttributes<HTMLAudioElement> = {\n      hidden: props.userDefinedAudioAttrs?.hidden,\n      style: props.userDefinedAudioAttrs?.style,\n      autoPlay: props.userDefinedAudioAttrs?.autoPlay,\n      controls: props.userDefinedAudioAttrs?.controls,\n      controlsList: props.userDefinedAudioAttrs?.controlsList,\n      crossOrigin: props.userDefinedAudioAttrs?.crossOrigin,\n      loop: props.userDefinedAudioAttrs?.loop,\n      mediaGroup: props.userDefinedAudioAttrs?.mediaGroup,\n      muted: props.userDefinedAudioAttrs?.muted,\n      playsInline: props.userDefinedAudioAttrs?.playsInline,\n      preload: props.userDefinedAudioAttrs?.preload,\n    };\n    return <audio ref={refCallback} {...audioProps} />;\n  }\n};\n\nexport default React.memo(MediaStreamPlayer);\n","import { Streamlit } from \"streamlit-component-lib\";\nimport React, { useEffect } from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport VideoLabelIcon from \"@mui/icons-material/VideoLabel\";\nimport { styled } from \"@mui/material/styles\";\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(4),\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"100%\",\n}));\n\ninterface PlaceholderProps {\n  loading: boolean;\n}\nconst Placeholder: React.VFC<PlaceholderProps> = (props) => {\n  useEffect(() => {\n    Streamlit.setFrameHeight();\n  });\n\n  return (\n    <StyledPaper elevation={0}>\n      {props.loading ? (\n        <CircularProgress />\n      ) : (\n        <VideoLabelIcon fontSize=\"large\" />\n      )}\n    </StyledPaper>\n  );\n};\n\nexport default React.memo(Placeholder);\n","export function compileMediaConstraints(\n  src: MediaStreamConstraints | undefined,\n  videoDeviceId: string | undefined,\n  audioDeviceId: string | undefined\n): MediaStreamConstraints {\n  const constraints = src || {};\n\n  if (videoDeviceId) {\n    if (constraints.video === true) {\n      constraints.video = {\n        deviceId: videoDeviceId,\n      };\n    } else if (\n      typeof constraints.video === \"object\" ||\n      constraints.video == null\n    ) {\n      constraints.video = {\n        ...constraints.video,\n        deviceId: videoDeviceId,\n      };\n    }\n  }\n\n  if (audioDeviceId) {\n    if (constraints.audio === true) {\n      constraints.audio = {\n        deviceId: audioDeviceId,\n      };\n    } else if (\n      typeof constraints.audio === \"object\" ||\n      constraints.audio == null\n    ) {\n      constraints.audio = {\n        ...constraints.audio,\n        deviceId: audioDeviceId,\n      };\n    }\n  }\n\n  return constraints;\n}\n\ninterface MediaUsage {\n  videoEnabled: boolean;\n  audioEnabled: boolean;\n}\nexport function getMediaUsage(constraintsFromPython: any): MediaUsage {\n  const videoEnabled = constraintsFromPython\n    ? !!constraintsFromPython.video\n    : true;\n  const audioEnabled = constraintsFromPython\n    ? !!constraintsFromPython.audio\n    : true;\n\n  return { videoEnabled, audioEnabled };\n}\n","import { ComponentValue } from \"../component-value\";\nimport { Action } from \"./actions\";\n\nexport type WebRtcState = \"STOPPED\" | \"SIGNALLING\" | \"PLAYING\" | \"STOPPING\";\nexport interface State {\n  webRtcState: WebRtcState;\n  sdpOffer: RTCSessionDescription | null;\n  signallingTimedOut: boolean;\n  stream: MediaStream | null;\n  error: Error | null;\n}\nexport const initialState: State = {\n  webRtcState: \"STOPPED\",\n  sdpOffer: null,\n  signallingTimedOut: false,\n  stream: null,\n  error: null,\n};\n\nexport const reducer: React.Reducer<State, Action> = (state, action) => {\n  switch (action.type) {\n    case \"SIGNALLING_START\":\n      return {\n        ...state,\n        webRtcState: \"SIGNALLING\",\n        stream: null,\n        error: null,\n        signallingTimedOut: false,\n      };\n    case \"SIGNALLING_TIMEOUT\":\n      return {\n        ...state,\n        signallingTimedOut: true,\n      };\n    case \"SET_STREAM\":\n      return {\n        ...state,\n        stream: action.stream,\n      };\n    case \"SET_OFFER\":\n      return {\n        ...state,\n        sdpOffer: action.offer,\n      };\n    case \"STOPPING\":\n      return {\n        ...state,\n        webRtcState: \"STOPPING\",\n        sdpOffer: null,\n      };\n    case \"STOPPED\":\n      return {\n        ...state,\n        webRtcState: \"STOPPED\",\n        sdpOffer: null,\n        stream: null,\n      };\n    case \"START_PLAYING\":\n      return {\n        ...state,\n        webRtcState: \"PLAYING\",\n        sdpOffer: null,\n      };\n    case \"PROCESS_ANSWER_ERROR\":\n      return {\n        ...state,\n        error: action.error,\n      };\n    case \"ERROR\":\n      return {\n        ...state,\n        webRtcState: \"STOPPED\",\n        sdpOffer: null,\n        error: action.error,\n      };\n  }\n};\n\nexport const connectReducer = (\n  onComponentValueChange: (newComponentValue: ComponentValue) => void\n): React.Reducer<State, Action> => {\n  const connectedReducer: React.Reducer<State, Action> = (state, action) => {\n    const nextState = reducer(state, action);\n\n    const nextPlaying = nextState.webRtcState === \"PLAYING\";\n    const prevPlaying = state.webRtcState === \"PLAYING\";\n    const playingChanged = nextPlaying !== prevPlaying;\n\n    const nextSdpOffer = nextState.sdpOffer;\n    const prevSdpOffer = state.sdpOffer;\n    const sdpOfferChanged = nextSdpOffer !== prevSdpOffer;\n\n    if (playingChanged || sdpOfferChanged) {\n      if (prevSdpOffer) {\n        console.log(\"Send SDP offer\", prevSdpOffer);\n      }\n      onComponentValueChange({\n        playing: nextPlaying,\n        sdpOffer: nextSdpOffer ? nextSdpOffer.toJSON() : \"\", // `Streamlit.setComponentValue` cannot \"unset\" the field by passing null or undefined, so here an empty string is set instead when `sdpOffer` is undefined. // TODO: Create an issue\n      });\n    }\n\n    return nextState;\n  };\n\n  return connectedReducer;\n};\n","import { useReducer, useCallback, useRef, useEffect, useMemo } from \"react\";\nimport { compileMediaConstraints } from \"../media-constraint\";\nimport { ComponentValue } from \"../component-value\";\nimport { connectReducer, initialState } from \"./reducer\";\n\nexport type WebRtcMode = \"RECVONLY\" | \"SENDONLY\" | \"SENDRECV\";\nexport const isWebRtcMode = (val: unknown): val is WebRtcMode =>\n  val === \"RECVONLY\" || val === \"SENDONLY\" || val === \"SENDRECV\";\nexport const isReceivable = (mode: WebRtcMode): boolean =>\n  mode === \"SENDRECV\" || mode === \"RECVONLY\";\nexport const isTransmittable = (mode: WebRtcMode): boolean =>\n  mode === \"SENDRECV\" || mode === \"SENDONLY\";\n\nconst setupOffer = (\n  pc: RTCPeerConnection\n): Promise<RTCSessionDescription | null> => {\n  return pc\n    .createOffer()\n    .then((offer) => {\n      console.log(\"Created offer:\", offer);\n      return pc.setLocalDescription(offer);\n    })\n    .then(() => {\n      console.log(\"Wait for ICE gethering...\");\n      // Wait for ICE gathering to complete\n      return new Promise<void>((resolve) => {\n        if (pc.iceGatheringState === \"complete\") {\n          resolve();\n        } else {\n          const checkState = () => {\n            if (pc.iceGatheringState === \"complete\") {\n              pc.removeEventListener(\"icegatheringstatechange\", checkState);\n              resolve();\n            }\n          };\n          pc.addEventListener(\"icegatheringstatechange\", checkState);\n        }\n      });\n    })\n    .then(() => {\n      const offer = pc.localDescription;\n      return offer;\n    })\n    .catch((err) => {\n      console.error(err);\n      throw err;\n    });\n};\n\nconst SIGNALLING_TIMEOUT = 3 * 1000;\n\nexport const useWebRtc = (\n  props: {\n    mode: WebRtcMode;\n    desiredPlayingState: boolean | undefined;\n    sdpAnswerJson: string | undefined;\n    rtcConfiguration: RTCConfiguration | undefined;\n    mediaStreamConstraints: MediaStreamConstraints | undefined;\n  },\n  videoInput: MediaDeviceInfo | null,\n  audioInput: MediaDeviceInfo | null,\n  onComponentValueChange: (newComponentValue: ComponentValue) => void\n) => {\n  // Initialize component value\n  useEffect(() => {\n    return onComponentValueChange({\n      playing: false,\n      sdpOffer: \"\",\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const signallingTimerRef = useRef<NodeJS.Timeout>();\n  const pcRef = useRef<RTCPeerConnection>();\n  const reducer = useMemo(\n    () => connectReducer(onComponentValueChange),\n    [onComponentValueChange]\n  );\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const stop = useCallback(() => {\n    const stopInner = async () => {\n      if (state.webRtcState === \"STOPPING\") {\n        return;\n      }\n\n      const pc = pcRef.current;\n      pcRef.current = undefined;\n\n      dispatch({ type: \"STOPPING\" });\n\n      if (pc == null) {\n        return;\n      }\n\n      // close transceivers\n      if (pc.getTransceivers) {\n        pc.getTransceivers().forEach(function (transceiver) {\n          if (transceiver.stop) {\n            transceiver.stop();\n          }\n        });\n      }\n\n      // close local audio / video\n      pc.getSenders().forEach(function (sender) {\n        sender.track?.stop();\n      });\n\n      // close peer connection\n      return new Promise<void>((resolve) => {\n        setTimeout(() => {\n          pc.close();\n          resolve();\n        }, 500);\n      });\n    };\n\n    stopInner()\n      .catch((error) => dispatch({ type: \"ERROR\", error }))\n      .finally(() => {\n        dispatch({ type: \"STOPPED\" });\n      });\n  }, [state.webRtcState]);\n\n  const stopRef = useRef(stop);\n  stopRef.current = stop;\n\n  const start = useCallback(() => {\n    if (state.webRtcState !== \"STOPPED\") {\n      return;\n    }\n\n    const startInner = async () => {\n      dispatch({ type: \"SIGNALLING_START\" });\n      signallingTimerRef.current = setTimeout(() => {\n        dispatch({ type: \"SIGNALLING_TIMEOUT\" });\n      }, SIGNALLING_TIMEOUT);\n\n      const mode = props.mode;\n\n      const config: RTCConfiguration = props.rtcConfiguration || {};\n      console.log(\"RTCConfiguration:\", config);\n      const pc = new RTCPeerConnection(config);\n\n      // Connect received audio / video to DOM elements\n      if (mode === \"SENDRECV\" || mode === \"RECVONLY\") {\n        pc.addEventListener(\"track\", (evt) => {\n          const stream = evt.streams[0]; // TODO: Handle multiple streams\n          dispatch({ type: \"SET_STREAM\", stream });\n        });\n      }\n\n      // Set up transceivers\n      if (mode === \"SENDRECV\" || mode === \"SENDONLY\") {\n        const constraints = compileMediaConstraints(\n          props.mediaStreamConstraints,\n          videoInput?.deviceId,\n          audioInput?.deviceId\n        );\n        console.log(\"MediaStreamConstraints:\", constraints);\n\n        if (constraints.audio || constraints.video) {\n          if (navigator.mediaDevices == null) {\n            // Ref: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#privacy_and_security\n            // > A secure context is, in short, a page loaded using HTTPS or the file:/// URL scheme, or a page loaded from localhost.\n            throw new Error(\n              \"navigator.mediaDevices is undefined. It seems the current document is not loaded securely.\"\n            );\n          }\n          if (navigator.mediaDevices.getUserMedia == null) {\n            throw new Error(\"getUserMedia is not implemented in this browser\");\n          }\n\n          const stream = await navigator.mediaDevices.getUserMedia(constraints);\n          stream.getTracks().forEach((track) => {\n            pc.addTrack(track, stream);\n          });\n        }\n\n        if (mode === \"SENDONLY\") {\n          for (const transceiver of pc.getTransceivers()) {\n            transceiver.direction = \"sendonly\";\n          }\n        }\n      } else if (mode === \"RECVONLY\") {\n        pc.addTransceiver(\"video\", { direction: \"recvonly\" });\n        pc.addTransceiver(\"audio\", { direction: \"recvonly\" });\n      }\n      console.log(\"transceivers\", pc.getTransceivers());\n\n      pc.addEventListener(\"iceconnectionstatechange\", () => {\n        console.log(\"iceconnectionstatechange\", pc.iceConnectionState);\n        if (\n          pc.iceConnectionState === \"disconnected\" ||\n          pc.iceConnectionState === \"failed\" ||\n          pc.iceConnectionState === \"closed\"\n        ) {\n          stopRef.current();\n        }\n      });\n\n      pcRef.current = pc;\n\n      await setupOffer(pc).then((offer) => {\n        if (offer == null) {\n          throw new Error(\"Failed to create an offer SDP\");\n        }\n\n        dispatch({ type: \"SET_OFFER\", offer });\n      });\n    };\n\n    startInner().catch((error) =>\n      dispatch({\n        type: \"ERROR\",\n        error,\n      })\n    );\n  }, [\n    audioInput?.deviceId,\n    props.mediaStreamConstraints,\n    props.mode,\n    props.rtcConfiguration,\n    state.webRtcState,\n    videoInput?.deviceId,\n  ]);\n\n  // processAnswer\n  useEffect(() => {\n    const pc = pcRef.current;\n    if (pc == null) {\n      return;\n    }\n\n    const sdpAnswerJson = props.sdpAnswerJson;\n    if (pc.remoteDescription == null) {\n      if (sdpAnswerJson && state.webRtcState === \"SIGNALLING\") {\n        const sdpAnswer = JSON.parse(sdpAnswerJson);\n        console.log(\"Receive answer sdpOffer\", sdpAnswer);\n        pc.setRemoteDescription(sdpAnswer)\n          .then(() => {\n            console.log(\"Remote description is set\");\n\n            if (signallingTimerRef.current) {\n              clearTimeout(signallingTimerRef.current);\n            }\n            dispatch({ type: \"START_PLAYING\" });\n          })\n          .catch((error) => {\n            dispatch({ type: \"PROCESS_ANSWER_ERROR\", error });\n            stop();\n          });\n      }\n    }\n  }, [props.sdpAnswerJson, state.webRtcState, stop]);\n\n  // reconcilePlayingState\n  useEffect(() => {\n    const desiredPlayingState = props.desiredPlayingState;\n    if (desiredPlayingState != null) {\n      if (desiredPlayingState === true && state.webRtcState === \"STOPPED\") {\n        start();\n      } else if (\n        desiredPlayingState === false &&\n        (state.webRtcState === \"SIGNALLING\" || state.webRtcState === \"PLAYING\")\n      ) {\n        stop();\n      }\n    }\n  }, [props.desiredPlayingState, start, state.webRtcState, stop]);\n\n  return {\n    start,\n    stop,\n    state,\n  };\n};\n","import { Streamlit } from \"streamlit-component-lib\";\n\nexport interface ComponentValue {\n  playing: boolean;\n  sdpOffer: string; // `Streamlit.setComponentValue` cannot \"unset\" the field by passing null or undefined, so an empty string will be used here for that purpose. // TODO: Create an issue\n}\n\nexport function setComponentValue(componentValue: ComponentValue) {\n  return Streamlit.setComponentValue(componentValue);\n}\n","import React, { useState, useCallback } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Alert from \"@mui/material/Alert\";\nimport DeviceSelector from \"./DeviceSelector\";\nimport MediaStreamPlayer from \"./MediaStreamPlayer\";\nimport Placeholder from \"./Placeholder\";\nimport { useRenderData } from \"streamlit-component-lib-react-hooks\";\nimport {\n  useWebRtc,\n  WebRtcMode,\n  isWebRtcMode,\n  isReceivable,\n  isTransmittable,\n} from \"./webrtc\";\nimport { getMediaUsage } from \"./media-constraint\";\nimport { ComponentValue, setComponentValue } from \"./component-value\";\nimport \"webrtc-adapter\";\n\ninterface WebRtcStreamerInnerProps {\n  disabled: boolean;\n  mode: WebRtcMode;\n  desiredPlayingState: boolean | undefined;\n  sdpAnswerJson: string | undefined;\n  rtcConfiguration: RTCConfiguration | undefined;\n  mediaStreamConstraints: MediaStreamConstraints | undefined;\n  videoHtmlAttrs: any;\n  audioHtmlAttrs: any;\n  onComponentValueChange: (newComponentValue: ComponentValue) => void;\n}\nconst WebRtcStreamerInner: React.VFC<WebRtcStreamerInnerProps> = (props) => {\n  const [devices, setDevices] = useState<{\n    video: MediaDeviceInfo | null;\n    audio: MediaDeviceInfo | null;\n  }>({ video: null, audio: null });\n  const { state, start, stop } = useWebRtc(\n    props,\n    devices.video,\n    devices.audio,\n    props.onComponentValueChange\n  );\n\n  const mode = props.mode;\n  const buttonDisabled =\n    props.disabled ||\n    (state.webRtcState === \"SIGNALLING\" && !state.signallingTimedOut) || // Users can click the stop button after signalling timed out.\n    state.webRtcState === \"STOPPING\" ||\n    props.desiredPlayingState != null;\n  const receivable = isWebRtcMode(mode) && isReceivable(mode);\n  const transmittable = isWebRtcMode(mode) && isTransmittable(mode);\n  const { videoEnabled, audioEnabled } = getMediaUsage(\n    props.mediaStreamConstraints\n  );\n\n  const handleDeviceSelect = useCallback(\n    (video: MediaDeviceInfo | null, audio: MediaDeviceInfo | null) => {\n      setDevices({ video, audio });\n    },\n    []\n  );\n\n  return (\n    <Box>\n      {state.error && (\n        <Alert severity=\"error\">\n          {state.error.name}: {state.error.message}\n        </Alert>\n      )}\n      <Box py={1} display=\"flex\">\n        {state.stream ? (\n          <MediaStreamPlayer\n            stream={state.stream}\n            userDefinedVideoAttrs={props.videoHtmlAttrs}\n            userDefinedAudioAttrs={props.audioHtmlAttrs}\n          />\n        ) : (\n          receivable && (\n            <Placeholder loading={state.webRtcState === \"SIGNALLING\"} />\n          )\n        )}\n      </Box>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        {state.webRtcState === \"PLAYING\" ||\n        state.webRtcState === \"SIGNALLING\" ? (\n          <Button variant=\"contained\" onClick={stop} disabled={buttonDisabled}>\n            Stop\n          </Button>\n        ) : (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={start}\n            disabled={buttonDisabled}\n          >\n            Start\n          </Button>\n        )}\n        {transmittable && (\n          <DeviceSelector\n            videoEnabled={videoEnabled}\n            audioEnabled={audioEnabled}\n            onSelect={handleDeviceSelect}\n            value={devices}\n          />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nconst WebRtcStreamer: React.VFC = () => {\n  const renderData = useRenderData();\n\n  const mode = renderData.args[\"mode\"];\n  const desiredPlayingState = renderData.args[\"desired_playing_state\"];\n  const sdpAnswerJson = renderData.args[\"sdp_answer_json\"];\n  const rtcConfiguration: RTCConfiguration = renderData.args.rtc_configuration;\n  const mediaStreamConstraints: MediaStreamConstraints =\n    renderData.args.media_stream_constraints;\n  const videoHtmlAttrs = renderData.args.video_html_attrs;\n  const audioHtmlAttrs = renderData.args.audio_html_attrs;\n\n  if (!isWebRtcMode(mode)) {\n    throw new Error(`Invalid mode ${mode}`);\n  }\n\n  return (\n    <WebRtcStreamerInner\n      disabled={renderData.disabled}\n      mode={mode}\n      desiredPlayingState={desiredPlayingState}\n      sdpAnswerJson={sdpAnswerJson}\n      rtcConfiguration={rtcConfiguration}\n      mediaStreamConstraints={mediaStreamConstraints}\n      videoHtmlAttrs={videoHtmlAttrs}\n      audioHtmlAttrs={audioHtmlAttrs}\n      onComponentValueChange={setComponentValue}\n    />\n  );\n};\n\nexport default WebRtcStreamer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"./ThemeProvider\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { StreamlitProvider } from \"streamlit-component-lib-react-hooks\";\nimport WebRtcStreamer from \"./WebRtcStreamer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitProvider>\n      <ThemeProvider>\n        <CssBaseline />\n        <WebRtcStreamer />\n      </ThemeProvider>\n    </StreamlitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React, { useCallback } from \"react\";\nimport Select, { SelectProps } from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { styled } from \"@mui/material/styles\";\n\nconst StyledSelect = styled(Select)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n}));\n\ninterface DeviceSelecterProps {\n  labelId: SelectProps[\"labelId\"];\n  value: MediaDeviceInfo | null;\n  devices: MediaDeviceInfo[];\n  onChange: (device: MediaDeviceInfo | null) => void;\n}\nconst DeviceSelecter: React.VFC<DeviceSelecterProps> = ({\n  labelId,\n  value,\n  devices,\n  onChange: onChangeProp,\n}) => {\n  const onChange = useCallback<NonNullable<SelectProps[\"onChange\"]>>(\n    (e) => {\n      const selected = devices.find((d) => d.deviceId === e.target.value);\n      onChangeProp(selected || null);\n    },\n    [devices, onChangeProp]\n  );\n\n  if (devices.length === 0) {\n    return (\n      <Select value=\"\" disabled>\n        <option aria-label=\"None\" value=\"\" />\n      </Select>\n    );\n  }\n\n  if (value == null) {\n    setImmediate(() => onChangeProp(devices[0]));\n    return null;\n  }\n\n  return (\n    <StyledSelect labelId={labelId} value={value.deviceId} onChange={onChange}>\n      {devices.map((device) => (\n        <MenuItem key={device.deviceId} value={device.deviceId}>\n          {device.label}\n        </MenuItem>\n      ))}\n    </StyledSelect>\n  );\n};\n\nexport default DeviceSelecter;\n"],"sourceRoot":""}