# -*- coding: utf-8 -*-
"""customErrors.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bHXKauuKg_9HB_PHKX33uauAVE1wuYUc
"""

class NumberCheckError(Exception):
  def __init__(self, number, type_ = None):
    self.number = number
    self.type_ = type_
    super().__init__(self.number)

  def __str__(self ):
    if( self.type_ == None ):
      return f'Error in parameters setting. {self.number} should be an integer or float type number.'
    elif( self.type_ == int ):
      return f'Error in parameters setting. {self.number} should be an integer number.'
    elif( self.type_ == float ):
      return f'Error in parameters setting. {self.number} should be a float type number.'
  pass


class SetterIntervalError(Exception):
  def __init__(self, number, min, max):
    self.number = number
    self.min = min
    self.max = max
    super().__init__(self.number)

  def __str__(self):
    return f'Error. {self.number} should be between {self.min} and {self.max}.'